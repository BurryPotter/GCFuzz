public class G1StringTableLeak extends java.lang.Object
{
    private static final java.util.Random random;
    private static final char[] characters;
    private static final int charArrayLength;
    static int i;
    static java.util.Vector objects;

    public void <init>()
    {
        G1StringTableLeak r0;

        r0 := @this: G1StringTableLeak;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r14;
        java.util.Vector $r1, $r4, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r2, $r3, $r9;
        java.io.PrintStream $r6, $r10;
        java.lang.Object $r0, $r13;
        java.lang.StringBuilder $r5, $r7, $r8;

        r14 := @parameter0: java.lang.String[];

     label1:
        $r1 = <G1StringTableLeak: java.util.Vector objects>;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r0);

        $r2 = staticinvoke <G1StringTableLeak: java.lang.String generateRandomString(int)>(20);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        $r4 = <G1StringTableLeak: java.util.Vector objects>;

        virtualinvoke $r4.<java.util.Vector: boolean add(java.lang.Object)>($r3);

        $i0 = <G1StringTableLeak: int i>;

        $i1 = $i0 + 1;

        <G1StringTableLeak: int i> = $i1;

        $i2 = $i1 % 10000;

        if $i2 != 0 goto label4;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("i: ");

        $i3 = <G1StringTableLeak: int i>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $i4 = <G1StringTableLeak: int i>;

        $i5 = $i4 % 500000;

        if $i5 != 0 goto label4;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("now making most strings unreachable");

        $r11 = new java.util.Vector;

        specialinvoke $r11.<java.util.Vector: void <init>()>();

        i6 = 0;

     label2:
        if i6 >= 100 goto label3;

        $r12 = <G1StringTableLeak: java.util.Vector objects>;

        $r13 = virtualinvoke $r12.<java.util.Vector: java.lang.Object get(int)>(i6);

        virtualinvoke $r11.<java.util.Vector: boolean add(java.lang.Object)>($r13);

        i6 = i6 + 1;

        goto label2;

     label3:
        <G1StringTableLeak: java.util.Vector objects> = $r11;

     label4:
        goto label1;
    }

    private static java.lang.String generateRandomString(int)
    {
        java.util.Random $r2;
        char $c3;
        int i0, $i1, $i2, i4;
        char[] $r3;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r3 = <G1StringTableLeak: char[] characters>;

        $r2 = <G1StringTableLeak: java.util.Random random>;

        $i1 = <G1StringTableLeak: int charArrayLength>;

        $i2 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i1);

        $c3 = $r3[$i2];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.util.Vector $r3;
        int $i0;
        char[] $r1, $r2;
        java.util.Random $r0;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <G1StringTableLeak: java.util.Random random> = $r0;

        $r1 = newarray (char)[26];

        $r1[0] = 97;

        $r1[1] = 98;

        $r1[2] = 99;

        $r1[3] = 100;

        $r1[4] = 101;

        $r1[5] = 102;

        $r1[6] = 103;

        $r1[7] = 104;

        $r1[8] = 105;

        $r1[9] = 106;

        $r1[10] = 107;

        $r1[11] = 108;

        $r1[12] = 109;

        $r1[13] = 110;

        $r1[14] = 111;

        $r1[15] = 112;

        $r1[16] = 113;

        $r1[17] = 114;

        $r1[18] = 115;

        $r1[19] = 116;

        $r1[20] = 117;

        $r1[21] = 118;

        $r1[22] = 119;

        $r1[23] = 120;

        $r1[24] = 121;

        $r1[25] = 122;

        <G1StringTableLeak: char[] characters> = $r1;

        $r2 = <G1StringTableLeak: char[] characters>;

        $i0 = lengthof $r2;

        <G1StringTableLeak: int charArrayLength> = $i0;

        <G1StringTableLeak: int i> = 0;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        <G1StringTableLeak: java.util.Vector objects> = $r3;

        return;
    }
}
