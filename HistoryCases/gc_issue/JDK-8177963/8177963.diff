diff -r 4de7a9acc35c src/share/vm/gc/parallel/gcTaskThread.cpp
--- a/src/share/vm/gc/parallel/gcTaskThread.cpp	Mon Apr 03 15:57:06 2017 +0200
+++ b/src/share/vm/gc/parallel/gcTaskThread.cpp	Mon Apr 03 17:16:15 2017 +0200
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2002, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2017, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
@@ -55,7 +55,9 @@
 }
 
 GCTaskTimeStamp* GCTaskThread::time_stamp_at(uint index) {
-  guarantee(index < GCTaskTimeStampEntries, "increase GCTaskTimeStampEntries");
+  if (index == GCTaskTimeStampEntries) {
+    log_warning(gc, task, time)("GC-Thread %u: Out of time stamp entries, reusing last. Increase GCTaskTimeStampEntries to get complete information. ", id());
+  }
   if (_time_stamps == NULL) {
     // We allocate the _time_stamps array lazily since logging can be enabled dynamically
     GCTaskTimeStamp* time_stamps = NEW_C_HEAP_ARRAY(GCTaskTimeStamp, GCTaskTimeStampEntries, mtGC);
@@ -65,7 +67,7 @@
       FREE_C_HEAP_ARRAY(GCTaskTimeStamp, time_stamps);
     }
   }
-
+  index = MIN2(index, (uint)GCTaskTimeStampEntries - 1);
   return &(_time_stamps[index]);
 }
 
@@ -76,7 +78,8 @@
   // has in fact been allocated when calling this function.
   if (_time_stamps != NULL) {
     log_debug(gc, task, time)("GC-Thread %u entries: %d", id(), _time_stamp_index);
-    for(uint i=0; i<_time_stamp_index; i++) {
+    uint to_print = MIN2(_time_stamp_index, (uint)GCTaskTimeStampEntries);
+    for(uint i=0; i<to_print; i++) {
       GCTaskTimeStamp* time_stamp = time_stamp_at(i);
       log_debug(gc, task, time)("\t[ %s " JLONG_FORMAT " " JLONG_FORMAT " ]",
                                 time_stamp->name(),
diff -r 4de7a9acc35c test/gc/parallel/TestPrintGCDetailsVerbose.java
--- a/test/gc/parallel/TestPrintGCDetailsVerbose.java	Mon Apr 03 15:57:06 2017 +0200
+++ b/test/gc/parallel/TestPrintGCDetailsVerbose.java	Mon Apr 03 17:16:15 2017 +0200
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2017, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
@@ -23,12 +23,13 @@
 
 /*
  * @test TestPrintGCDetailsVerbose
- * @bug 8016740
+ * @bug 8016740 8177963
  * @summary Tests that jvm with maximally verbose GC logging does not crash when ParOldGC has no memory
  * @key gc
  * @requires vm.gc.Parallel
  * @modules java.base/jdk.internal.misc
  * @run main/othervm -Xmx50m -XX:+UseParallelGC -Xlog:gc*=trace TestPrintGCDetailsVerbose
+ * @run main/othervm -Xmx50m -XX:+UseParallelGC -XX:GCTaskTimeStampEntries=1 -Xlog:gc*=trace TestPrintGCDetailsVerbose
  */
 public class TestPrintGCDetailsVerbose {
 
