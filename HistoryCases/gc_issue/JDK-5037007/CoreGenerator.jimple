public class CoreGenerator extends java.lang.Object implements java.lang.Runnable
{
    static java.util.Random generator;

    public void <init>()
    {
        CoreGenerator r0;

        r0 := @this: CoreGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.lang.String genString(int)
    {
        java.util.Random $r2;
        char $c4;
        byte $b2;
        int i0, $i1, $i3, i5, $i6;
        char[] r0;
        CoreGenerator r3;
        java.lang.String $r4;

        r3 := @this: CoreGenerator;

        i0 := @parameter0: int;

        r0 = newarray (char)[i0];

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $r2 = <CoreGenerator: java.util.Random generator>;

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>(96);

        $b2 = (byte) $i1;

        $i6 = (int) $b2;

        $i3 = 32 + $i6;

        $c4 = (char) $i3;

        r0[i5] = $c4;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>(r0);

        return $r4;
    }

    public void run()
    {
        java.util.HashMap $r0;
        java.util.Random $r3, $r6, $r7;
        java.lang.Integer $r1, $r5;
        int $i0, $i1, $i2, $i3, i4;
        CoreGenerator r2;
        java.lang.String $r4, $r8;

        r2 := @this: CoreGenerator;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(1024);

        i4 = 1;

     label1:
        if i4 >= 2097152 goto label3;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i4);

        $r3 = <CoreGenerator: java.util.Random generator>;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(4194304);

        $r4 = specialinvoke r2.<CoreGenerator: java.lang.String genString(int)>($i0);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        $i1 = i4 % 20;

        if 0 != $i1 goto label2;

        $r5 = new java.lang.Integer;

        $r6 = <CoreGenerator: java.util.Random generator>;

        $i2 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(i4);

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i2);

        $r7 = <CoreGenerator: java.util.Random generator>;

        $i3 = virtualinvoke $r7.<java.util.Random: int nextInt(int)>(4194304);

        $r8 = specialinvoke r2.<CoreGenerator: java.lang.String genString(int)>($i3);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r8);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Thread $r0;
        int i0;
        java.lang.String[] r2;
        CoreGenerator $r1;

        r2 := @parameter0: java.lang.String[];

        i0 = 0;

     label1:
        if i0 >= 20 goto label2;

        $r0 = new java.lang.Thread;

        $r1 = new CoreGenerator;

        specialinvoke $r1.<CoreGenerator: void <init>()>();

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        virtualinvoke $r0.<java.lang.Thread: void start()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        java.util.Random $r0;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <CoreGenerator: java.util.Random generator> = $r0;

        return;
    }
}
