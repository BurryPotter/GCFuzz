final class Test7190310$3 extends java.lang.Thread
{

    void <init>()
    {
        Test7190310$3 r0;

        r0 := @this: Test7190310$3;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        java.io.PrintStream $r2, $r4, $r10;
        Test7190310$3 r11;
        java.lang.ref.ReferenceQueue $r0;
        java.lang.ref.Reference $r1;
        java.lang.InterruptedException $r9;
        java.lang.StringBuilder $r3, $r5, $r7;
        java.lang.String $r8;
        java.lang.ref.WeakReference $r6;
        boolean $z0;

        r11 := @this: Test7190310$3;

     label1:
        $r0 = staticinvoke <Test7190310: java.lang.ref.ReferenceQueue access$100()>();

        $r1 = virtualinvoke $r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>($r1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queueReader returned, ref==wr is ");

        $r6 = staticinvoke <Test7190310: java.lang.ref.WeakReference access$000()>();

        if $r1 != $r6 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Sleep interrupted - exiting");

     label6:
        return;

        catch java.lang.InterruptedException from label1 to label4 with label5;
    }
}
