public class MetaOOM extends java.lang.Object
{

    public void <init>()
    {
        MetaOOM r0;

        r0 := @this: MetaOOM;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static byte[] loadClass(java.lang.Class) throws java.lang.Exception
    {
        byte[] $r10;
        java.io.ByteArrayOutputStream $r9;
        int $i0;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.Class r1;
        java.lang.String $r2, $r3, $r6;
        java.lang.ClassLoader $r7;
        java.io.InputStream $r8;

        r1 := @parameter0: java.lang.Class;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r6);

        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int read()>();

        if $i0 < 0 goto label2;

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(int)>($i0);

        goto label1;

     label2:
        $r10 = virtualinvoke $r9.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r10;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        byte[] $r1, $r2;
        java.lang.StringBuilder $r11, $r13, $r14, $r22, $r24, $r25, $r26, $r27, $r28;
        java.lang.ClassLoader $r7;
        java.lang.String[] r30;
        java.util.ArrayList $r3, $r4;
        int $i0, $i1, i2, $i3;
        java.lang.String $r9, $r15, $r19, $r29;
        java.io.PrintStream $r0, $r12, $r16, $r17, $r23;
        MetaOOM$1 $r5;
        java.lang.Class $r6, $r8, $r10, $r18, $r20;
        java.lang.OutOfMemoryError $r21;

        r30 := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("MetaOOM");

        $r1 = staticinvoke <MetaOOM: byte[] loadClass(java.lang.Class)>(class "LMetaOOM$SmallClass;");

        $r2 = staticinvoke <MetaOOM: byte[] loadClass(java.lang.Class)>(class "LMetaOOM$LargeClass;");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= 999999 goto label8;

        $r5 = new MetaOOM$1;

        $r6 = class "LMetaOOM;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r5.<MetaOOM$1: void <init>(java.lang.ClassLoader,byte[],byte[])>($r7, $r1, $r2);

        if i2 >= 3000 goto label2;

        $r18 = class "LMetaOOM$SmallClass;";

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r19);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        goto label6;

     label2:
        if i2 != 3000 goto label3;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("small->large");

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        staticinvoke <java.lang.System: void gc()>();

        goto label6;

     label3:
        $r8 = class "LMetaOOM$LargeClass;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r9);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label4:
        goto label6;

     label5:
        $r21 := @caughtexception;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Final Result: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" large classes loaded.)");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r29);

        throw $r21;

     label6:
        $i3 = i2 % 1024;

        if $i3 != 0 goto label7;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r15);

        $i0 = i2 % 16384;

        if $i0 != 0 goto label7;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("");

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        return;

        catch java.lang.OutOfMemoryError from label3 to label4 with label5;
    }
}
