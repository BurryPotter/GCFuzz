public class SampleClass extends java.lang.Object
{
    static int r;
    int joop;
    java.lang.String masto;
    gc.memory.Array.SampleMe.Judd j;

    public void foo()
    {
        java.io.PrintStream $r0, $r2;
        SampleClass r6;
        int i0, i1;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r3, $r5;
        double $d0, $d1;

        r6 := @this: SampleClass;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("gronk, gronk, gronk");

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = $d0 * 1000.0;

        i0 = (int) $d1;

        i1 = i0 * 5;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void <init>()
    {
        gc.memory.Array.SampleMe.Judd $r2;
        SampleClass r0;
        gc.memory.Array.SampleMe.SampleClass $r3;

        r0 := @this: SampleClass;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new gc.memory.Array.SampleMe.Judd;

        specialinvoke $r2.<gc.memory.Array.SampleMe.Judd: void <init>()>();

        $r3 = (gc.memory.Array.SampleMe.SampleClass) r0;

        $r3.<gc.memory.Array.SampleMe.SampleClass: gc.memory.Array.SampleMe.Judd j> = $r2;

        return;
    }
}
