final class CheckControl$Executor extends java.lang.Object
{
    private static final sun.hotspot.WhiteBox WB;

    static void <clinit>()
    {
        sun.hotspot.WhiteBox $r0;

        $r0 = staticinvoke <sun.hotspot.WhiteBox: sun.hotspot.WhiteBox getWhiteBox()>();

        <gc.concurrent_phase_control.CheckControl$Executor: sun.hotspot.WhiteBox WB> = $r0;

        return;
    }

    private void <init>()
    {
        CheckControl$Executor r0;

        r0 := @this: CheckControl$Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void step(java.lang.String)
    {
        java.io.PrintStream $r1, $r7;
        sun.hotspot.WhiteBox $r5;
        java.lang.StringBuilder $r0, $r3, $r6, $r8;
        java.lang.String r2, $r4, $r9;

        r2 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Requesting concurrent phase: ");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r5 = <gc.concurrent_phase_control.CheckControl$Executor: sun.hotspot.WhiteBox WB>;

        virtualinvoke $r5.<sun.hotspot.WhiteBox: void requestConcurrentGCPhase(java.lang.String)>(r2);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Reached concurrent phase: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        int i0, i1;
        java.lang.String[] r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

        goto label2;

     label1:
        r1 = r0[i1];

        staticinvoke <gc.concurrent_phase_control.CheckControl$Executor: void step(java.lang.String)>(r1);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        staticinvoke <java.lang.Thread: void sleep(long)>(250L);

        return;
    }
}
