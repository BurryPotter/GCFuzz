public class TestCardTablePageCommits extends java.lang.Object
{

    public void <init>()
    {
        TestCardTablePageCommits r0;

        r0 := @this: TestCardTablePageCommits;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.Process $r3;
        java.lang.String[] $r0, r4;
        java.lang.ProcessBuilder $r1;
        java.lang.String $r5;
        jdk.test.lib.process.OutputAnalyzer $r2;
        boolean $z0;

        r4 := @parameter0: java.lang.String[];

        $z0 = staticinvoke <jdk.test.lib.Platform: boolean isSparc()>();

        if $z0 == 0 goto label1;

        $r5 = "-Xmx8m";

        goto label2;

     label1:
        $r5 = "-Xmx4m";

     label2:
        $r0 = newarray (java.lang.String)[4];

        $r0[0] = $r5;

        $r0[1] = "-XX:NativeMemoryTracking=detail";

        $r0[2] = "-XX:+UseParallelGC";

        $r0[3] = "-version";

        $r1 = staticinvoke <jdk.test.lib.process.ProcessTools: java.lang.ProcessBuilder createJavaProcessBuilder(java.lang.String[])>($r0);

        $r2 = new jdk.test.lib.process.OutputAnalyzer;

        $r3 = virtualinvoke $r1.<java.lang.ProcessBuilder: java.lang.Process start()>();

        specialinvoke $r2.<jdk.test.lib.process.OutputAnalyzer: void <init>(java.lang.Process)>($r3);

        virtualinvoke $r2.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldHaveExitValue(int)>(0);

        return;
    }
}
