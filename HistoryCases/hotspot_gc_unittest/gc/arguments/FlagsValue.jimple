public class FlagsValue extends java.lang.Object
{

    public void <init>()
    {
        FlagsValue r0;

        r0 := @this: FlagsValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean getFlagBoolValue(java.lang.String, java.lang.String)
    {
        java.util.regex.Matcher $r7;
        java.lang.String r1, $r2, $r4, r6, $r8, $r13;
        boolean $z0, $z1;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r0, $r3, $r10, $r11, $r12;
        java.util.regex.Pattern $r5;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\s+:?= (true|false)");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r4);

        $r7 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6);

        $z0 = virtualinvoke $r7.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find value for flag ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in output string");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        $r8 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("true");

        return $z1;
    }

    public static long getFlagLongValue(java.lang.String, java.lang.String)
    {
        long $l3;
        java.util.regex.Matcher $r7;
        int $i0, $i1, $i2;
        java.lang.String r1, $r2, $r4, r6, $r8, $r9, $r14;
        boolean $z0;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r0, $r3, $r11, $r12, $r13;
        java.util.regex.Pattern $r5;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\s+:?=\\s+\\d+");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r4);

        $r7 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6);

        $z0 = virtualinvoke $r7.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find value for flag ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in output string");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label1:
        $r8 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int lastIndexOf(java.lang.String)>(" ");

        $i1 = $i0 + 1;

        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        return $l3;
    }
}
