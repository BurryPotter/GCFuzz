public class fileTest extends nsk.share.gc.GCTestBase
{
    private java.io.File[] fileArray;
    private java.io.FileInputStream[] fileInputArray;
    private static final int fileNumber;
    private static final int inputStreamNumber;
    private java.lang.String fileName;

    public void <init>(java.lang.String)
    {
        gc.gctests.fileTest.fileTest $r4, $r5, $r6;
        java.io.FileInputStream[] $r3;
        fileTest r0;
        java.lang.String r1;
        java.io.File[] $r2;

        r0 := @this: fileTest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<nsk.share.gc.GCTestBase: void <init>()>();

        $r4 = (gc.gctests.fileTest.fileTest) r0;

        $r4.<gc.gctests.fileTest.fileTest: java.lang.String fileName> = r1;

        $r2 = newarray (java.io.File)[10000];

        $r5 = (gc.gctests.fileTest.fileTest) r0;

        $r5.<gc.gctests.fileTest.fileTest: java.io.File[] fileArray> = $r2;

        $r3 = newarray (java.io.FileInputStream)[20];

        $r6 = (gc.gctests.fileTest.fileTest) r0;

        $r6.<gc.gctests.fileTest.fileTest: java.io.FileInputStream[] fileInputArray> = $r3;

        return;
    }

    public void runIteration() throws java.io.IOException
    {
        gc.gctests.fileTest.fileTest $r11, $r12, $r13, $r14, $r15;
        fileTest r0;
        int i0, i1, i2;
        java.lang.String $r2, $r5;
        java.io.FileInputStream $r8, $r10;
        java.io.File $r9;
        java.io.FileInputStream[] $r6, $r7;
        java.io.File[] $r3;

        r0 := @this: fileTest;

        i0 = 0;

        goto label2;

     label1:
        $r11 = (gc.gctests.fileTest.fileTest) r0;

        $r3 = $r11.<gc.gctests.fileTest.fileTest: java.io.File[] fileArray>;

        $r9 = new java.io.File;

        $r12 = (gc.gctests.fileTest.fileTest) r0;

        $r2 = $r12.<gc.gctests.fileTest.fileTest: java.lang.String fileName>;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3[i0] = $r9;

        i0 = i0 + 1;

     label2:
        if i0 < 10000 goto label1;

        i1 = 0;

        goto label4;

     label3:
        $r13 = (gc.gctests.fileTest.fileTest) r0;

        $r6 = $r13.<gc.gctests.fileTest.fileTest: java.io.FileInputStream[] fileInputArray>;

        $r10 = new java.io.FileInputStream;

        $r14 = (gc.gctests.fileTest.fileTest) r0;

        $r5 = $r14.<gc.gctests.fileTest.fileTest: java.lang.String fileName>;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.lang.String)>($r5);

        $r6[i1] = $r10;

        i1 = i1 + 1;

     label4:
        if i1 < 20 goto label3;

        i2 = 0;

        goto label6;

     label5:
        $r15 = (gc.gctests.fileTest.fileTest) r0;

        $r7 = $r15.<gc.gctests.fileTest.fileTest: java.io.FileInputStream[] fileInputArray>;

        $r8 = $r7[i2];

        virtualinvoke $r8.<java.io.FileInputStream: void close()>();

        i2 = i2 + 1;

     label6:
        if i2 < 20 goto label5;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r7, $r13;
        gc.gctests.fileTest.fileTest $r10, $r11, $r12;
        nsk.share.runner.RunParams $r2, $r4;
        fileTest r1;
        long $l0;
        java.io.IOException $r5;
        nsk.share.TestFailure $r9;
        nsk.share.test.StressOptions $r3;
        nsk.share.test.Stresser $r8;
        boolean $z0;

        r1 := @this: fileTest;

     label1:
        $r8 = new nsk.share.test.Stresser;

        $r10 = (gc.gctests.fileTest.fileTest) r1;

        $r2 = $r10.<gc.gctests.fileTest.fileTest: nsk.share.runner.RunParams runParams>;

        $r3 = virtualinvoke $r2.<nsk.share.runner.RunParams: nsk.share.test.StressOptions getStressOptions()>();

        specialinvoke $r8.<nsk.share.test.Stresser: void <init>(nsk.share.test.StressOptions)>($r3);

        $r11 = (gc.gctests.fileTest.fileTest) r1;

        $r4 = $r11.<gc.gctests.fileTest.fileTest: nsk.share.runner.RunParams runParams>;

        $l0 = virtualinvoke $r4.<nsk.share.runner.RunParams: long getIterations()>();

        virtualinvoke $r8.<nsk.share.test.Stresser: void start(long)>($l0);

     label2:
        goto label4;

     label3:
        $r12 = (gc.gctests.fileTest.fileTest) r1;

        virtualinvoke $r12.<gc.gctests.fileTest.fileTest: void runIteration()>();

     label4:
        $z0 = virtualinvoke $r8.<nsk.share.test.Stresser: boolean iteration()>();

        if $z0 != 0 goto label3;

        goto label6;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r8.<nsk.share.test.Stresser: void finish()>();

        throw $r7;

     label6:
        virtualinvoke $r8.<nsk.share.test.Stresser: void finish()>();

     label7:
        goto label9;

     label8:
        $r5 := @caughtexception;

        $r9 = new nsk.share.TestFailure;

        specialinvoke $r9.<nsk.share.TestFailure: void <init>(java.lang.Throwable)>($r5);

        $r13 = (java.lang.Throwable) $r9;

        throw $r13;

     label9:
        return;

        catch java.lang.Throwable from label2 to label5 with label5;
        catch java.io.IOException from label1 to label7 with label8;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Throwable $r7;
        gc.gctests.fileTest.fileTest $r6;
        nsk.share.test.Test $r8;
        java.lang.String[] r0;
        nsk.share.TestBug $r5;
        int i0, $i1;
        java.lang.String $r1, r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r4 = null;

        i0 = 0;

        goto label3;

     label1:
        $r1 = r0[i0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("-Filename");

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        r4 = r0[i0];

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = lengthof r0;

        if i0 < $i1 goto label1;

        if r4 != null goto label4;

        $r5 = new nsk.share.TestBug;

        specialinvoke $r5.<nsk.share.TestBug: void <init>(java.lang.String)>("No -Filename option is specified");

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label4:
        $r6 = new gc.gctests.fileTest.fileTest;

        specialinvoke $r6.<gc.gctests.fileTest.fileTest: void <init>(java.lang.String)>(r4);

        $r8 = (nsk.share.test.Test) $r6;

        staticinvoke <nsk.share.gc.GC: void runTest(nsk.share.test.Test,java.lang.String[])>($r8, r0);

        return;
    }
}
