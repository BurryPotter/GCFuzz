class GcPointerCheckTest$Test extends java.lang.Object implements java.lang.Runnable
{
    private gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper first;
    nsk.share.test.ExecutionController stresser;
    final gc.gctests.GcPointerCheckTest.GcPointerCheckTest this$0;

    void <init>(gc.gctests.GcPointerCheckTest.GcPointerCheckTest)
    {
        gc.gctests.GcPointerCheckTest.GcPointerCheckTest r1;
        GcPointerCheckTest$Test r0;
        gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test $r2;

        r0 := @this: GcPointerCheckTest$Test;

        r1 := @parameter0: gc.gctests.GcPointerCheckTest.GcPointerCheckTest;

        $r2 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r0;

        $r2.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: gc.gctests.GcPointerCheckTest.GcPointerCheckTest this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        nsk.share.test.ExecutionController $r1, $r3, $r4;
        gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test $r5, $r6, $r7, $r8, $r9;
        GcPointerCheckTest$Test r0;
        gc.gctests.GcPointerCheckTest.GcPointerCheckTest $r2;
        boolean $z0;

        r0 := @this: GcPointerCheckTest$Test;

        $r5 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r0;

        $r1 = $r5.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: nsk.share.test.ExecutionController stresser>;

        if $r1 != null goto label2;

        $r6 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r0;

        $r2 = $r6.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: gc.gctests.GcPointerCheckTest.GcPointerCheckTest this$0>;

        $r3 = staticinvoke <gc.gctests.GcPointerCheckTest.GcPointerCheckTest: nsk.share.test.ExecutionController access$0(gc.gctests.GcPointerCheckTest.GcPointerCheckTest)>($r2);

        $r7 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r0;

        $r7.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: nsk.share.test.ExecutionController stresser> = $r3;

        goto label2;

     label1:
        $r8 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r0;

        virtualinvoke $r8.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: void testGcPointers()>();

     label2:
        $r9 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r0;

        $r4 = $r9.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: nsk.share.test.ExecutionController stresser>;

        $z0 = interfaceinvoke $r4.<nsk.share.test.ExecutionController: boolean continueExecution()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void testGcPointers()
    {
        java.lang.Throwable $r15;
        gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper r5, $r6, $r7, $r8;
        gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test $r10, $r11, $r12, $r13, $r14;
        GcPointerCheckTest$Test r1;
        int i0, i1, $i3;
        boolean $z0;
        nsk.share.TestFailure $r9;

        r1 := @this: GcPointerCheckTest$Test;

        i0 = 200;

        goto label4;

     label1:
        i1 = 0;

        $r6 = new gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper;

        $r10 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r1;

        specialinvoke $r6.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper: void <init>(gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test)>($r10);

        r5 = $r6;

        $r11 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r1;

        $r11.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper first> = $r6;

        goto label3;

     label2:
        i1 = i1 + 1;

        $r7 = new gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper;

        $r12 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r1;

        specialinvoke $r7.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper: void <init>(gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test)>($r12);

        r5.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper: gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper next> = $r7;

        r5 = $r7;

        $r8 = new gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper;

        $r13 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r1;

        specialinvoke $r8.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper: void <init>(gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test)>($r13);

     label3:
        if i1 != 1 goto label2;

        $i3 = (int) -1;

        i0 = i0 + $i3;

        $r14 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r1;

        $z0 = virtualinvoke $r14.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: boolean checkRefs()>();

        if $z0 != 0 goto label4;

        $r9 = new nsk.share.TestFailure;

        specialinvoke $r9.<nsk.share.TestFailure: void <init>(java.lang.String)>("Some references were bad");

        $r15 = (java.lang.Throwable) $r9;

        throw $r15;

     label4:
        if i0 > 0 goto label1;

        return;
    }

    private boolean checkRefs()
    {
        GcPointerCheckTest$Test r0;
        java.lang.Class $r1;
        gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper r2;
        gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test $r3;

        r0 := @this: GcPointerCheckTest$Test;

        $r3 = (gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test) r0;

        r2 = $r3.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test: gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper first>;

        goto label3;

     label1:
        $r1 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Lgc/gctests/GcPointerCheckTest/GcPointerCheckTest$Test$PointerHelper;" goto label2;

        return 0;

     label2:
        r2 = r2.<gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper: gc.gctests.GcPointerCheckTest.GcPointerCheckTest$Test$PointerHelper next>;

     label3:
        if r2 != null goto label1;

        return 1;
    }
}
