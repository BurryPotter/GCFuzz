public class ClassDeallocGC extends java.lang.Object
{

    public void <init>()
    {
        ClassDeallocGC r0;

        r0 := @this: ClassDeallocGC;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        java.io.PrintStream $r8;
        java.lang.Throwable $r14;
        java.lang.String[] r9;
        nsk.share.TestFailure $r13;
        int $i0;
        java.lang.Class $r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r5, $r6, $r12;
        java.lang.String $r7;
        gc.gctests.ClassDeallocGC.ClassOne r10, $r11;

        r9 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("gc.gctests.ClassDeallocGC.ClassOne");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

        r10 = (gc.gctests.ClassDeallocGC.ClassOne) $r1;

        staticinvoke <java.lang.System: void gc()>();

        $r11 = new gc.gctests.ClassDeallocGC.ClassOne;

        specialinvoke $r11.<gc.gctests.ClassDeallocGC.ClassOne: void <init>()>();

        $i0 = virtualinvoke $r11.<gc.gctests.ClassDeallocGC.ClassOne: int getCounter()>();

        if $i0 != 2 goto label1;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Test Passed.");

        goto label2;

     label1:
        $r13 = new nsk.share.TestFailure;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Test failed. counter = ");

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", should be 2.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<nsk.share.TestFailure: void <init>(java.lang.String)>($r7);

        $r14 = (java.lang.Throwable) $r13;

        throw $r14;

     label2:
        return;
    }
}
