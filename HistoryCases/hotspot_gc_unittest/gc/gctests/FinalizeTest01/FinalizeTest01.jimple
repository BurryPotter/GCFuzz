public class FinalizeTest01 extends nsk.share.gc.GCTestBase
{
    private final int allocRatio;
    private final int size;
    private int count;
    private static boolean throwExceptions;
    private nsk.share.test.ExecutionController stresser;

    static void <clinit>()
    {
        <gc.gctests.FinalizeTest01.FinalizeTest01: boolean throwExceptions> = 0;

        return;
    }

    public void <init>()
    {
        gc.gctests.FinalizeTest01.FinalizeTest01 $r1, $r2, $r3;
        FinalizeTest01 r0;

        r0 := @this: FinalizeTest01;

        specialinvoke r0.<nsk.share.gc.GCTestBase: void <init>()>();

        $r1 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r1.<gc.gctests.FinalizeTest01.FinalizeTest01: int allocRatio> = 5;

        $r2 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r2.<gc.gctests.FinalizeTest01.FinalizeTest01: int size> = 2048;

        $r3 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r3.<gc.gctests.FinalizeTest01.FinalizeTest01: int count> = 1000;

        return;
    }

    private void runOne()
    {
        byte[] $r1;
        gc.gctests.FinalizeTest01.FinalizeTest01 $r29, $r30, $r31;
        java.lang.management.MemoryMXBean $r4;
        byte $b13, $b17;
        gc.gctests.FinalizeTest01.FinExceptMemoryObject $r22;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        java.lang.Runtime $r7;
        java.lang.StringBuilder $r10, $r14, $r26, $r27;
        java.lang.Throwable $r32, $r33, $r34;
        nsk.share.test.ExecutionController $r5, $r6;
        long $l3, $l8, $l12, $l15, $l16, l20;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i14, i18, $i19, $i21, $i22, $i23, $i24, $i25;
        java.lang.String $r11, $r15;
        FinalizeTest01 r0;
        java.io.PrintStream $r9, $r13, $r19;
        nsk.share.TestFailure $r24, $r25, $r28;
        java.lang.InterruptedException $r20, $r21;
        nsk.share.gc.FinMemoryObject $r23;

        r0 := @this: FinalizeTest01;

        i18 = 0;

        goto label05;

     label01:
        $i0 = i18 % 5;

        if $i0 != 0 goto label03;

        $z0 = <gc.gctests.FinalizeTest01.FinalizeTest01: boolean throwExceptions>;

        if $z0 == 0 goto label02;

        $r22 = new gc.gctests.FinalizeTest01.FinExceptMemoryObject;

        specialinvoke $r22.<gc.gctests.FinalizeTest01.FinExceptMemoryObject: void <init>(int)>(2048);

        goto label04;

     label02:
        $r23 = new nsk.share.gc.FinMemoryObject;

        specialinvoke $r23.<nsk.share.gc.FinMemoryObject: void <init>(int)>(2048);

        goto label04;

     label03:
        $i1 = staticinvoke <nsk.share.gc.Memory: int getObjectExtraSize()>();

        $i2 = 2048 - $i1;

        $r1 = newarray (byte)[$i2];

     label04:
        i18 = i18 + 1;

     label05:
        $r29 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $i19 = $r29.<gc.gctests.FinalizeTest01.FinalizeTest01: int count>;

        if i18 < $i19 goto label01;

        $r4 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.MemoryMXBean getMemoryMXBean()>();

        $r30 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r5 = $r30.<gc.gctests.FinalizeTest01.FinalizeTest01: nsk.share.test.ExecutionController stresser>;

        staticinvoke <nsk.share.gc.Algorithms: void eatMemory(nsk.share.test.ExecutionController)>($r5);

        $r31 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r6 = $r31.<gc.gctests.FinalizeTest01.FinalizeTest01: nsk.share.test.ExecutionController stresser>;

        $z1 = interfaceinvoke $r6.<nsk.share.test.ExecutionController: boolean continueExecution()>();

        if $z1 != 0 goto label06;

        return;

     label06:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l20 = $l3 + 60000L;

        goto label11;

     label07:
        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("No objects are found in the finalization queue. Waiting..");

     label08:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label09:
        goto label11;

     label10:
        $r21 := @caughtexception;

     label11:
        $i21 = staticinvoke <nsk.share.gc.FinMemoryObject: int getFinalizedCount()>();

        $i22 = interfaceinvoke $r4.<java.lang.management.MemoryMXBean: int getObjectPendingFinalizationCount()>();

        $i23 = $i21 + $i22;

        if $i23 != 0 goto label12;

        $l16 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b17 = $l16 cmp l20;

        $i24 = (int) $b17;

        if $i24 < 0 goto label07;

     label12:
        $i4 = staticinvoke <nsk.share.gc.FinMemoryObject: int getFinalizedCount()>();

        $i5 = interfaceinvoke $r4.<java.lang.management.MemoryMXBean: int getObjectPendingFinalizationCount()>();

        $i6 = $i4 + $i5;

        if $i6 != 0 goto label13;

        $r24 = new nsk.share.TestFailure;

        specialinvoke $r24.<nsk.share.TestFailure: void <init>(java.lang.String)>("Test failed. (No objects were not queued for finalization during 1min)");

        $r32 = (java.lang.Throwable) $r24;

        throw $r32;

     label13:
        $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r7.<java.lang.Runtime: void runFinalization()>();

        $i7 = staticinvoke <nsk.share.gc.FinMemoryObject: int getLiveCount()>();

        if $i7 == 0 goto label14;

        $z2 = 1;

        goto label15;

     label14:
        $z2 = 0;

     label15:
        z3 = $z2;

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l15 = $l8 + 60000L;

        goto label22;

     label16:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label17:
        goto label19;

     label18:
        $r20 := @caughtexception;

     label19:
        $i14 = staticinvoke <nsk.share.gc.FinMemoryObject: int getLiveCount()>();

        if $i14 == 0 goto label20;

        $z4 = 1;

        goto label21;

     label20:
        $z4 = 0;

     label21:
        z3 = $z4;

     label22:
        if z3 == 0 goto label23;

        $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b13 = $l12 cmp $l15;

        $i25 = (int) $b13;

        if $i25 < 0 goto label16;

     label23:
        if z3 == 0 goto label24;

        $r25 = new nsk.share.TestFailure;

        specialinvoke $r25.<nsk.share.TestFailure: void <init>(java.lang.String)>("Test failed (objects were not finalized during 1min)");

        $r33 = (java.lang.Throwable) $r25;

        throw $r33;

     label24:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Allocated: ");

        $i9 = staticinvoke <nsk.share.gc.FinMemoryObject: int getAllocatedCount()>();

        $r10 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Finalized: ");

        $i10 = staticinvoke <nsk.share.gc.FinMemoryObject: int getFinalizedCount()>();

        $r14 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $i11 = staticinvoke <nsk.share.gc.FinMemoryObject: int getLiveCount()>();

        if $i11 == 0 goto label25;

        $z5 = 1;

        goto label26;

     label25:
        $z5 = 0;

     label26:
        if $z5 == 0 goto label27;

        $r28 = new nsk.share.TestFailure;

        specialinvoke $r28.<nsk.share.TestFailure: void <init>(java.lang.String)>("Test failed.");

        $r34 = (java.lang.Throwable) $r28;

        throw $r34;

     label27:
        return;

        catch java.lang.InterruptedException from label08 to label09 with label10;
        catch java.lang.InterruptedException from label16 to label17 with label18;
    }

    public void run()
    {
        nsk.share.runner.RunParams $r2, $r4, $r6;
        gc.gctests.FinalizeTest01.FinalizeTest01 $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25;
        nsk.share.test.ExecutionController $r5, $r19;
        long $l0, $l1, $l2, $l3;
        nsk.share.test.StressOptions $r3;
        int $i4, $i5;
        java.lang.String $r13;
        FinalizeTest01 r0;
        java.io.PrintStream $r8, $r14;
        nsk.share.test.Stresser $r15;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r16;

        r0 := @this: FinalizeTest01;

        $r15 = new nsk.share.test.Stresser;

        $r17 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r2 = $r17.<gc.gctests.FinalizeTest01.FinalizeTest01: nsk.share.runner.RunParams runParams>;

        $r3 = virtualinvoke $r2.<nsk.share.runner.RunParams: nsk.share.test.StressOptions getStressOptions()>();

        specialinvoke $r15.<nsk.share.test.Stresser: void <init>(nsk.share.test.StressOptions)>($r3);

        $r18 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r19 = (nsk.share.test.ExecutionController) $r15;

        $r18.<gc.gctests.FinalizeTest01.FinalizeTest01: nsk.share.test.ExecutionController stresser> = $r19;

        $r20 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r5 = $r20.<gc.gctests.FinalizeTest01.FinalizeTest01: nsk.share.test.ExecutionController stresser>;

        $r21 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r4 = $r21.<gc.gctests.FinalizeTest01.FinalizeTest01: nsk.share.runner.RunParams runParams>;

        $l0 = virtualinvoke $r4.<nsk.share.runner.RunParams: long getIterations()>();

        interfaceinvoke $r5.<nsk.share.test.ExecutionController: void start(long)>($l0);

        $r22 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r6 = $r22.<gc.gctests.FinalizeTest01.FinalizeTest01: nsk.share.runner.RunParams runParams>;

        $l1 = virtualinvoke $r6.<nsk.share.runner.RunParams: long getTestMemory()>();

        $l2 = $l1 / 2048L;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l2, 2147483647L);

        $i4 = (int) $l3;

        $r23 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $r23.<gc.gctests.FinalizeTest01.FinalizeTest01: int count> = $i4;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("Allocating ");

        $r24 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        $i5 = $r24.<gc.gctests.FinalizeTest01.FinalizeTest01: int count>;

        $r9 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" objects. 1 out of ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" will have a finalizer.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void flush()>();

        $r25 = (gc.gctests.FinalizeTest01.FinalizeTest01) r0;

        virtualinvoke $r25.<gc.gctests.FinalizeTest01.FinalizeTest01: void runOne()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        nsk.share.test.Test $r4;
        gc.gctests.FinalizeTest01.FinalizeTest01 $r3;
        int i0, $i1;
        java.lang.String[] r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        i0 = 0;

        goto label3;

     label1:
        $r1 = r0[i0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("-throwExceptions");

        if $z0 == 0 goto label2;

        <gc.gctests.FinalizeTest01.FinalizeTest01: boolean throwExceptions> = 1;

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = lengthof r0;

        if i0 < $i1 goto label1;

        $r3 = new gc.gctests.FinalizeTest01.FinalizeTest01;

        specialinvoke $r3.<gc.gctests.FinalizeTest01.FinalizeTest01: void <init>()>();

        $r4 = (nsk.share.test.Test) $r3;

        staticinvoke <nsk.share.gc.GC: void runTest(nsk.share.test.Test,java.lang.String[])>($r4, r0);

        return;
    }
}
