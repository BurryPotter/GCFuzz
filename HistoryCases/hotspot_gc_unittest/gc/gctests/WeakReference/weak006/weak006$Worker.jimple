class weak006$Worker extends java.lang.Object implements java.lang.Runnable
{
    private int length;
    private int objectSize;
    private java.lang.Object[] references;
    private java.lang.ref.Reference lastReference;
    final gc.gctests.WeakReference.weak006.weak006 this$0;

    private java.lang.Object makeReference(int, java.lang.Object)
    {
        java.lang.Object[] r6, r7;
        long $l2, $l4, $l8, $l10;
        gc.gctests.WeakReference.weak006.weak006$Worker $r12, $r13, $r14;
        int i0, $i1, $i3, $i5, $i6, $i7, $i9, $i11, i12, i13;
        java.lang.ref.SoftReference $r10;
        java.lang.ref.WeakReference $r9;
        java.lang.ref.PhantomReference $r11;
        java.lang.ref.Reference r8;
        weak006$Worker r0;
        java.lang.Object r1, $r2;

        r0 := @this: weak006$Worker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label11;
            case 4: goto label04;
            case 5: goto label07;
            default: goto label11;
        };

     label01:
        $r9 = new java.lang.ref.WeakReference;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        return $r9;

     label02:
        $r10 = new java.lang.ref.SoftReference;

        specialinvoke $r10.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r1);

        return $r10;

     label03:
        $r11 = new java.lang.ref.PhantomReference;

        specialinvoke $r11.<java.lang.ref.PhantomReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, null);

        return $r11;

     label04:
        $r12 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i7 = $r12.<gc.gctests.WeakReference.weak006.weak006$Worker: int objectSize>;

        $l8 = (long) $i7;

        $i9 = staticinvoke <nsk.share.gc.Memory: int getReferenceSize()>();

        $l10 = (long) $i9;

        $i11 = staticinvoke <nsk.share.gc.Memory: int getArrayLength(long,long)>($l8, $l10);

        r6 = newarray (java.lang.Object)[$i11];

        i12 = 0;

        goto label06;

     label05:
        r6[i12] = r1;

        i12 = i12 + 1;

     label06:
        if i12 < $i11 goto label05;

        return r6;

     label07:
        $r13 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i1 = $r13.<gc.gctests.WeakReference.weak006.weak006$Worker: int objectSize>;

        $l2 = (long) $i1;

        $i3 = staticinvoke <nsk.share.gc.Memory: int getReferenceSize()>();

        $l4 = (long) $i3;

        $i5 = staticinvoke <nsk.share.gc.Memory: int getArrayLength(long,long)>($l2, $l4);

        r7 = newarray (java.lang.Object)[$i5];

        i13 = 1;

        goto label09;

     label08:
        r7[i13] = r1;

        i13 = i13 + 1;

     label09:
        if i13 < $i5 goto label08;

        $i6 = staticinvoke <nsk.share.test.LocalRandom: int nextInt(int)>(3);

        $r14 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r2 = virtualinvoke $r14.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object makeReference(int,java.lang.Object)>($i6, r7);

        r8 = (java.lang.ref.Reference) $r2;

        if $i5 <= 0 goto label10;

        r7[0] = r8;

     label10:
        return r8;

     label11:
        return r1;
    }

    private void clear()
    {
        java.lang.Object[] $r1;
        weak006$Worker r0;
        int $i0, $i1;
        gc.gctests.WeakReference.weak006.weak006$Worker $r2, $r3, $r4;

        r0 := @this: weak006$Worker;

        $r2 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r2.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.ref.Reference lastReference> = null;

        $r3 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r1 = $r3.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references>;

        $r4 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i0 = $r4.<gc.gctests.WeakReference.weak006.weak006$Worker: int length>;

        $i1 = $i0 - 1;

        $r1[$i1] = null;

        return;
    }

    private void makeReferences(int)
    {
        java.lang.ref.Reference $r7, $r8;
        weak006$Worker r0;
        java.lang.Object[] $r3, $r4, $r9, $r10, $r11, $r14;
        nsk.share.gc.MemoryObject $r15;
        gc.gctests.WeakReference.weak006.weak006$Worker $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, i8, $i9, i10;
        java.lang.ref.WeakReference $r16;
        java.lang.Object $r5, $r6, $r12, $r13;

        r0 := @this: weak006$Worker;

        i3 := @parameter0: int;

        $r17 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        virtualinvoke $r17.<gc.gctests.WeakReference.weak006.weak006$Worker: void clear()>();

        $r15 = new nsk.share.gc.MemoryObject;

        $r18 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i0 = $r18.<gc.gctests.WeakReference.weak006.weak006$Worker: int objectSize>;

        specialinvoke $r15.<nsk.share.gc.MemoryObject: void <init>(int)>($i0);

        $r19 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r3 = $r19.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references>;

        $r16 = new java.lang.ref.WeakReference;

        specialinvoke $r16.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r15);

        $r3[0] = $r16;

        i8 = 1;

        goto label4;

     label1:
        $r20 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i1 = $r20.<gc.gctests.WeakReference.weak006.weak006$Worker: int length>;

        $i2 = $i1 - 1;

        if i8 == $i2 goto label2;

        $r21 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r10 = $r21.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references>;

        $i5 = staticinvoke <nsk.share.test.LocalRandom: int nextInt(int)>(2);

        $r22 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r11 = $r22.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references>;

        $i6 = i8 - 1;

        $r12 = $r11[$i6];

        $r23 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r13 = virtualinvoke $r23.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object makeReference(int,java.lang.Object)>($i5, $r12);

        $r10[i8] = $r13;

        goto label3;

     label2:
        $r24 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r4 = $r24.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references>;

        $i4 = i8 - 1;

        $r5 = $r4[$i4];

        $r25 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r6 = virtualinvoke $r25.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object makeReference(int,java.lang.Object)>(i3, $r5);

        $r7 = (java.lang.ref.Reference) $r6;

        $r26 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r26.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.ref.Reference lastReference> = $r7;

        $r27 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r9 = $r27.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references>;

        $r28 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r8 = $r28.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.ref.Reference lastReference>;

        $r9[i8] = $r8;

     label3:
        i8 = i8 + 1;

     label4:
        $r29 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i9 = $r29.<gc.gctests.WeakReference.weak006.weak006$Worker: int length>;

        if i8 < $i9 goto label1;

        i10 = 0;

        goto label6;

     label5:
        $r30 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r14 = $r30.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references>;

        $r14[i10] = null;

        i10 = i10 + 1;

     label6:
        $r31 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i7 = $r31.<gc.gctests.WeakReference.weak006.weak006$Worker: int length>;

        if i10 < $i7 goto label5;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r15, $r19;
        nsk.share.test.ExecutionController $r2;
        gc.gctests.WeakReference.weak006.weak006$Worker $r11, $r12, $r13, $r14, $r16, $r17, $r18;
        boolean $z0, $z1;
        nsk.share.TestFailure $r9, $r10;
        java.lang.ref.Reference $r3, $r5;
        gc.gctests.WeakReference.weak006.weak006 $r1;
        weak006$Worker r0;
        java.lang.Object $r4, $r6;

        r0 := @this: weak006$Worker;

        $r11 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        virtualinvoke $r11.<gc.gctests.WeakReference.weak006.weak006$Worker: void makeReferences(int)>(0);

        $r12 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r1 = $r12.<gc.gctests.WeakReference.weak006.weak006$Worker: gc.gctests.WeakReference.weak006.weak006 this$0>;

        $r2 = staticinvoke <gc.gctests.WeakReference.weak006.weak006: nsk.share.test.ExecutionController access$0(gc.gctests.WeakReference.weak006.weak006)>($r1);

        staticinvoke <nsk.share.gc.Algorithms: void eatMemory(nsk.share.test.ExecutionController)>($r2);

        $z0 = interfaceinvoke $r2.<nsk.share.test.ExecutionController: boolean continueExecution()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r13 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r3 = $r13.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.ref.Reference lastReference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

        if $r4 == null goto label2;

        $r14 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r14.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references> = null;

        $r9 = new nsk.share.TestFailure;

        specialinvoke $r9.<nsk.share.TestFailure: void <init>(java.lang.String)>("Last weak reference has not been cleared");

        $r15 = (java.lang.Throwable) $r9;

        throw $r15;

     label2:
        $r16 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        virtualinvoke $r16.<gc.gctests.WeakReference.weak006.weak006$Worker: void makeReferences(int)>(1);

        staticinvoke <nsk.share.gc.Algorithms: void eatMemory(nsk.share.test.ExecutionController)>($r2);

        $z1 = interfaceinvoke $r2.<nsk.share.test.ExecutionController: boolean continueExecution()>();

        if $z1 != 0 goto label3;

        return;

     label3:
        $r17 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r5 = $r17.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.ref.Reference lastReference>;

        $r6 = virtualinvoke $r5.<java.lang.ref.Reference: java.lang.Object get()>();

        if $r6 == null goto label4;

        $r18 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r18.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references> = null;

        $r10 = new nsk.share.TestFailure;

        specialinvoke $r10.<nsk.share.TestFailure: void <init>(java.lang.String)>("Last soft reference has not been cleared");

        $r19 = (java.lang.Throwable) $r10;

        throw $r19;

     label4:
        return;
    }

    public void <init>(gc.gctests.WeakReference.weak006.weak006)
    {
        nsk.share.runner.RunParams $r2;
        java.lang.Object[] $r7;
        long $l0, $l2, $l3, $l7;
        gc.gctests.WeakReference.weak006.weak006$Worker $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        int $i1, $i4, $i5, $i6, $i8, $i9, $i10;
        java.lang.String $r6;
        java.io.PrintStream $r4;
        gc.gctests.WeakReference.weak006.weak006 r1;
        weak006$Worker r0;
        java.lang.StringBuilder $r5, $r8;

        r0 := @this: weak006$Worker;

        r1 := @parameter0: gc.gctests.WeakReference.weak006.weak006;

        $r9 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r9.<gc.gctests.WeakReference.weak006.weak006$Worker: gc.gctests.WeakReference.weak006.weak006 this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r10 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r10.<gc.gctests.WeakReference.weak006.weak006$Worker: int objectSize> = 100;

        $r2 = staticinvoke <gc.gctests.WeakReference.weak006.weak006: nsk.share.runner.RunParams access$1(gc.gctests.WeakReference.weak006.weak006)>(r1);

        $l0 = virtualinvoke $r2.<nsk.share.runner.RunParams: long getTestMemory()>();

        $r11 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i1 = $r11.<gc.gctests.WeakReference.weak006.weak006$Worker: int objectSize>;

        $l2 = (long) $i1;

        $l3 = $l0 - $l2;

        $i4 = staticinvoke <nsk.share.gc.Memory: int getReferenceSize()>();

        $r12 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i5 = $r12.<gc.gctests.WeakReference.weak006.weak006$Worker: int objectSize>;

        $i6 = $i4 + $i5;

        $l7 = (long) $i6;

        $i8 = staticinvoke <nsk.share.gc.Memory: int getArrayLength(long,long)>($l3, $l7);

        $r13 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r13.<gc.gctests.WeakReference.weak006.weak006$Worker: int length> = $i8;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Array size: ");

        $r14 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i9 = $r14.<gc.gctests.WeakReference.weak006.weak006$Worker: int length>;

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r15 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $i10 = $r15.<gc.gctests.WeakReference.weak006.weak006$Worker: int length>;

        $r7 = newarray (java.lang.Object)[$i10];

        $r16 = (gc.gctests.WeakReference.weak006.weak006$Worker) r0;

        $r16.<gc.gctests.WeakReference.weak006.weak006$Worker: java.lang.Object[] references> = $r7;

        return;
    }
}
