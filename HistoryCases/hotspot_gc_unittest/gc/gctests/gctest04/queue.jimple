class queue extends java.lang.Object
{
    gc.gctests.gctest04.bufreq head;
    gc.gctests.gctest04.bufreq tail;
    int limit;
    int count;

    void <init>(int)
    {
        gc.gctests.gctest04.queue $r1, $r2, $r3, $r4;
        int i0;
        queue r0;

        r0 := @this: queue;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = (gc.gctests.gctest04.queue) r0;

        $r1.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq head> = null;

        $r2 = (gc.gctests.gctest04.queue) r0;

        $r2.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq tail> = null;

        $r3 = (gc.gctests.gctest04.queue) r0;

        $r3.<gc.gctests.gctest04.queue: int limit> = i0;

        $r4 = (gc.gctests.gctest04.queue) r0;

        $r4.<gc.gctests.gctest04.queue: int count> = 0;

        return;
    }

    public boolean okToContinue()
    {
        gc.gctests.gctest04.queue $r1, $r2;
        int $i0, $i1;
        queue r0;

        r0 := @this: queue;

        $r1 = (gc.gctests.gctest04.queue) r0;

        $i1 = $r1.<gc.gctests.gctest04.queue: int count>;

        $r2 = (gc.gctests.gctest04.queue) r0;

        $i0 = $r2.<gc.gctests.gctest04.queue: int limit>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public synchronized void append(gc.gctests.gctest04.bufreq)
    {
        gc.gctests.gctest04.queue $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1;
        gc.gctests.gctest04.bufreq $r1, r2, $r3;
        queue r0;

        r0 := @this: queue;

        r2 := @parameter0: gc.gctests.gctest04.bufreq;

        $r4 = (gc.gctests.gctest04.queue) r0;

        $i0 = $r4.<gc.gctests.gctest04.queue: int count>;

        $i1 = $i0 + 1;

        $r5 = (gc.gctests.gctest04.queue) r0;

        $r5.<gc.gctests.gctest04.queue: int count> = $i1;

        $r6 = (gc.gctests.gctest04.queue) r0;

        $r1 = $r6.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq tail>;

        if $r1 != null goto label1;

        $r7 = (gc.gctests.gctest04.queue) r0;

        $r7.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq tail> = r2;

        $r8 = (gc.gctests.gctest04.queue) r0;

        $r8.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq head> = r2;

        return;

     label1:
        $r9 = (gc.gctests.gctest04.queue) r0;

        $r3 = $r9.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq tail>;

        virtualinvoke $r3.<gc.gctests.gctest04.bufreq: void setnext(gc.gctests.gctest04.bufreq)>(r2);

        $r10 = (gc.gctests.gctest04.queue) r0;

        $r10.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq tail> = r2;

        return;
    }

    public synchronized gc.gctests.gctest04.bufreq remove()
    {
        gc.gctests.gctest04.queue $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        gc.gctests.gctest04.bufreq $r1, r2, $r3, $r4, $r5;
        queue r0;

        r0 := @this: queue;

        $r6 = (gc.gctests.gctest04.queue) r0;

        $r1 = $r6.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq head>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r7 = (gc.gctests.gctest04.queue) r0;

        r2 = $r7.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq head>;

        $r8 = (gc.gctests.gctest04.queue) r0;

        $r3 = $r8.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq head>;

        $r4 = virtualinvoke $r3.<gc.gctests.gctest04.bufreq: gc.gctests.gctest04.bufreq getnext()>();

        $r9 = (gc.gctests.gctest04.queue) r0;

        $r9.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq head> = $r4;

        $r10 = (gc.gctests.gctest04.queue) r0;

        $r5 = $r10.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq head>;

        if $r5 != null goto label2;

        $r11 = (gc.gctests.gctest04.queue) r0;

        $r11.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq head> = null;

        $r12 = (gc.gctests.gctest04.queue) r0;

        $r12.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq tail> = null;

     label2:
        return r2;
    }
}
