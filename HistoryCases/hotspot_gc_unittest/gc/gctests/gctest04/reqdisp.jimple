class reqdisp extends java.lang.Thread
{
    gc.gctests.gctest04.queue req;

    void <init>(gc.gctests.gctest04.queue)
    {
        gc.gctests.gctest04.reqdisp $r2;
        gc.gctests.gctest04.queue r1;
        reqdisp r0;

        r0 := @this: reqdisp;

        r1 := @parameter0: gc.gctests.gctest04.queue;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r2 = (gc.gctests.gctest04.reqdisp) r0;

        $r2.<gc.gctests.gctest04.reqdisp: gc.gctests.gctest04.queue req> = r1;

        return;
    }

    public void run()
    {
        gc.gctests.gctest04.reqdisp $r7, $r8;
        gc.gctests.gctest04.queue $r1, $r5;
        reqdisp r0;
        long $l1;
        gc.gctests.gctest04.livethread $r6;
        java.lang.InterruptedException $r4;
        int $i0;
        gc.gctests.gctest04.bufreq $r2;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: reqdisp;

        goto label5;

     label1:
        $r7 = (gc.gctests.gctest04.reqdisp) r0;

        $r1 = $r7.<gc.gctests.gctest04.reqdisp: gc.gctests.gctest04.queue req>;

        $r2 = virtualinvoke $r1.<gc.gctests.gctest04.queue: gc.gctests.gctest04.bufreq remove()>();

        if $r2 == null goto label2;

        $r6 = new gc.gctests.gctest04.livethread;

        specialinvoke $r6.<gc.gctests.gctest04.livethread: void <init>(gc.gctests.gctest04.bufreq)>($r2);

        virtualinvoke $r6.<gc.gctests.gctest04.livethread: void start()>();

     label2:
        $d0 = staticinvoke <nsk.share.test.LocalRandom: double random()>();

        $d1 = $d0 * 20.0;

        $i0 = (int) $d1;

        $l1 = (long) $i0;

        staticinvoke <gc.gctests.gctest04.reqdisp: void sleep(long)>($l1);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        $r8 = (gc.gctests.gctest04.reqdisp) r0;

        $r5 = $r8.<gc.gctests.gctest04.reqdisp: gc.gctests.gctest04.queue req>;

        $z0 = virtualinvoke $r5.<gc.gctests.gctest04.queue: boolean okToContinue()>();

        if $z0 != 0 goto label1;

        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }
}
