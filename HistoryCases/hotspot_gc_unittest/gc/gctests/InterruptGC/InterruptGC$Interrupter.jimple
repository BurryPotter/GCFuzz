class InterruptGC$Interrupter extends java.lang.Object implements java.lang.Runnable
{
    private java.lang.Thread thread;
    final gc.gctests.InterruptGC.InterruptGC this$0;

    private void <init>(gc.gctests.InterruptGC.InterruptGC)
    {
        gc.gctests.InterruptGC.InterruptGC r1;
        InterruptGC$Interrupter r0;
        gc.gctests.InterruptGC.InterruptGC$Interrupter $r2;

        r0 := @this: InterruptGC$Interrupter;

        r1 := @parameter0: gc.gctests.InterruptGC.InterruptGC;

        $r2 = (gc.gctests.InterruptGC.InterruptGC$Interrupter) r0;

        $r2.<gc.gctests.InterruptGC.InterruptGC$Interrupter: gc.gctests.InterruptGC.InterruptGC this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        gc.gctests.InterruptGC.InterruptGC $r2, $r3;
        java.lang.Thread $r1, $r7, $r8;
        int $i0, $i1;
        gc.gctests.InterruptGC.InterruptGC$Interrupter $r9, $r10, $r11, $r12, $r13;
        java.util.List $r4, $r5;
        java.lang.Object $r6;
        InterruptGC$Interrupter r0;

        r0 := @this: InterruptGC$Interrupter;

        $r10 = (gc.gctests.InterruptGC.InterruptGC$Interrupter) r0;

        $r1 = $r10.<gc.gctests.InterruptGC.InterruptGC$Interrupter: java.lang.Thread thread>;

        if $r1 != null goto label1;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r11 = (gc.gctests.InterruptGC.InterruptGC$Interrupter) r0;

        $r11.<gc.gctests.InterruptGC.InterruptGC$Interrupter: java.lang.Thread thread> = $r8;

     label1:
        $r12 = (gc.gctests.InterruptGC.InterruptGC$Interrupter) r0;

        $r2 = $r12.<gc.gctests.InterruptGC.InterruptGC$Interrupter: gc.gctests.InterruptGC.InterruptGC this$0>;

        $r5 = $r2.<gc.gctests.InterruptGC.InterruptGC: java.util.List interrupters>;

        $r13 = (gc.gctests.InterruptGC.InterruptGC$Interrupter) r0;

        $r3 = $r13.<gc.gctests.InterruptGC.InterruptGC$Interrupter: gc.gctests.InterruptGC.InterruptGC this$0>;

        $r4 = $r3.<gc.gctests.InterruptGC.InterruptGC: java.util.List interrupters>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = staticinvoke <nsk.share.test.LocalRandom: int nextInt(int)>($i0);

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r9 = (gc.gctests.InterruptGC.InterruptGC$Interrupter) $r6;

        $r7 = virtualinvoke $r9.<gc.gctests.InterruptGC.InterruptGC$Interrupter: java.lang.Thread getThread()>();

        if $r7 == null goto label2;

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

     label2:
        staticinvoke <java.lang.System: void gc()>();

        return;
    }

    public java.lang.Thread getThread()
    {
        InterruptGC$Interrupter r0;
        gc.gctests.InterruptGC.InterruptGC$Interrupter $r2;
        java.lang.Thread $r1;

        r0 := @this: InterruptGC$Interrupter;

        $r2 = (gc.gctests.InterruptGC.InterruptGC$Interrupter) r0;

        $r1 = $r2.<gc.gctests.InterruptGC.InterruptGC$Interrupter: java.lang.Thread thread>;

        return $r1;
    }
}
