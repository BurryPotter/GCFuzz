class InterruptGC$GarbageCreator extends java.lang.Object implements java.lang.Runnable
{
    final gc.gctests.InterruptGC.InterruptGC this$0;

    private void <init>(gc.gctests.InterruptGC.InterruptGC)
    {
        gc.gctests.InterruptGC.InterruptGC$GarbageCreator $r2;
        InterruptGC$GarbageCreator r0;
        gc.gctests.InterruptGC.InterruptGC r1;

        r0 := @this: InterruptGC$GarbageCreator;

        r1 := @parameter0: gc.gctests.InterruptGC.InterruptGC;

        $r2 = (gc.gctests.InterruptGC.InterruptGC$GarbageCreator) r0;

        $r2.<gc.gctests.InterruptGC.InterruptGC$GarbageCreator: gc.gctests.InterruptGC.InterruptGC this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Object[] r2;
        InterruptGC$GarbageCreator r0;
        nsk.share.test.ExecutionController $r5;
        gc.gctests.InterruptGC.InterruptGC $r1, $r3, $r4, $r6, $r7;
        long $l2;
        int $i0, $i1, i3;
        gc.gctests.InterruptGC.InterruptGC$GarbageCreator $r10, $r11, $r12, $r13, $r14;
        nsk.share.gc.gp.GarbageProducer $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: InterruptGC$GarbageCreator;

        $r10 = (gc.gctests.InterruptGC.InterruptGC$GarbageCreator) r0;

        $r1 = $r10.<gc.gctests.InterruptGC.InterruptGC$GarbageCreator: gc.gctests.InterruptGC.InterruptGC this$0>;

        $i0 = $r1.<gc.gctests.InterruptGC.InterruptGC: int count>;

        r2 = newarray (java.lang.Object)[$i0];

        i3 = 0;

        goto label2;

     label1:
        $r11 = (gc.gctests.InterruptGC.InterruptGC$GarbageCreator) r0;

        $r6 = $r11.<gc.gctests.InterruptGC.InterruptGC$GarbageCreator: gc.gctests.InterruptGC.InterruptGC this$0>;

        $r8 = $r6.<gc.gctests.InterruptGC.InterruptGC: nsk.share.gc.gp.GarbageProducer garbageProducer>;

        $r12 = (gc.gctests.InterruptGC.InterruptGC$GarbageCreator) r0;

        $r7 = $r12.<gc.gctests.InterruptGC.InterruptGC$GarbageCreator: gc.gctests.InterruptGC.InterruptGC this$0>;

        $l2 = $r7.<gc.gctests.InterruptGC.InterruptGC: long size>;

        $r9 = interfaceinvoke $r8.<nsk.share.gc.gp.GarbageProducer: java.lang.Object create(long)>($l2);

        r2[i3] = $r9;

        i3 = i3 + 1;

     label2:
        $r13 = (gc.gctests.InterruptGC.InterruptGC$GarbageCreator) r0;

        $r3 = $r13.<gc.gctests.InterruptGC.InterruptGC$GarbageCreator: gc.gctests.InterruptGC.InterruptGC this$0>;

        $i1 = $r3.<gc.gctests.InterruptGC.InterruptGC: int count>;

        if i3 >= $i1 goto label3;

        $r14 = (gc.gctests.InterruptGC.InterruptGC$GarbageCreator) r0;

        $r4 = $r14.<gc.gctests.InterruptGC.InterruptGC$GarbageCreator: gc.gctests.InterruptGC.InterruptGC this$0>;

        $r5 = staticinvoke <gc.gctests.InterruptGC.InterruptGC: nsk.share.test.ExecutionController access$0(gc.gctests.InterruptGC.InterruptGC)>($r4);

        $z0 = interfaceinvoke $r5.<nsk.share.test.ExecutionController: boolean continueExecution()>();

        if $z0 != 0 goto label1;

     label3:
        return;
    }
}
