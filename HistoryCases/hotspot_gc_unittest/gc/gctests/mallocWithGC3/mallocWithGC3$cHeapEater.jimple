class mallocWithGC3$cHeapEater extends java.lang.Thread
{
    final gc.gctests.mallocWithGC3.mallocWithGC3 this$0;

    private void <init>(gc.gctests.mallocWithGC3.mallocWithGC3)
    {
        gc.gctests.mallocWithGC3.mallocWithGC3$cHeapEater $r2;
        mallocWithGC3$cHeapEater r0;
        gc.gctests.mallocWithGC3.mallocWithGC3 r1;

        r0 := @this: mallocWithGC3$cHeapEater;

        r1 := @parameter0: gc.gctests.mallocWithGC3.mallocWithGC3;

        $r2 = (gc.gctests.mallocWithGC3.mallocWithGC3$cHeapEater) r0;

        $r2.<gc.gctests.mallocWithGC3.mallocWithGC3$cHeapEater: gc.gctests.mallocWithGC3.mallocWithGC3 this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        gc.gctests.mallocWithGC3.mallocWithGC3$cHeapEater $r2;
        mallocWithGC3$cHeapEater r0;
        gc.gctests.mallocWithGC3.mallocWithGC3 $r1;

        r0 := @this: mallocWithGC3$cHeapEater;

        $r2 = (gc.gctests.mallocWithGC3.mallocWithGC3$cHeapEater) r0;

        $r1 = $r2.<gc.gctests.mallocWithGC3.mallocWithGC3$cHeapEater: gc.gctests.mallocWithGC3.mallocWithGC3 this$0>;

        virtualinvoke $r1.<gc.gctests.mallocWithGC3.mallocWithGC3: void getMallocLock03()>();

        return;
    }
}
