public class nativeGC02 extends nsk.share.gc.GCTestBase
{
    private int count;
    nsk.share.gc.CircularLinkedList cl;

    static void <clinit>()
    {
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("nativeGC02");

        return;
    }

    public void <init>()
    {
        nativeGC02 r0;
        gc.gctests.nativeGC02.nativeGC02 $r1;

        r0 := @this: nativeGC02;

        specialinvoke r0.<nsk.share.gc.GCTestBase: void <init>()>();

        $r1 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r1.<gc.gctests.nativeGC02.nativeGC02: int count> = 10000;

        return;
    }

    public native int nativeMethod02(nsk.share.gc.CircularLinkedList);

    public void callbackGC()
    {
        nativeGC02 r0;
        gc.gctests.nativeGC02.nativeGC02 $r1;

        r0 := @this: nativeGC02;

        $r1 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r1.<gc.gctests.nativeGC02.nativeGC02: nsk.share.gc.CircularLinkedList cl> = null;

        staticinvoke <java.lang.System: void gc()>();

        return;
    }

    public void run()
    {
        gc.gctests.nativeGC02.nativeGC02 $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        nativeGC02 r0;
        int $i0, $i1;
        java.lang.String $r7;
        java.lang.Exception $r5;
        nsk.share.gc.CircularLinkedList $r1, $r2;
        nsk.share.log.Log $r3, $r4, $r6, $r8;

        r0 := @this: nativeGC02;

        $r9 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r1 = virtualinvoke $r9.<gc.gctests.nativeGC02.nativeGC02: nsk.share.gc.CircularLinkedList buildBigCircularLinkedList()>();

        $r10 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r10.<gc.gctests.nativeGC02.nativeGC02: nsk.share.gc.CircularLinkedList cl> = $r1;

     label1:
        $r11 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r2 = $r11.<gc.gctests.nativeGC02.nativeGC02: nsk.share.gc.CircularLinkedList cl>;

        $r12 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $i0 = virtualinvoke $r12.<gc.gctests.nativeGC02.nativeGC02: int nativeMethod02(nsk.share.gc.CircularLinkedList)>($r2);

        $r13 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $i1 = $r13.<gc.gctests.nativeGC02.nativeGC02: int count>;

        if $i0 != $i1 goto label2;

        $r14 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r4 = $r14.<gc.gctests.nativeGC02.nativeGC02: nsk.share.log.Log log>;

        interfaceinvoke $r4.<nsk.share.log.Log: void info(java.lang.Object)>("Test Passed");

        goto label5;

     label2:
        $r15 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r3 = $r15.<gc.gctests.nativeGC02.nativeGC02: nsk.share.log.Log log>;

        interfaceinvoke $r3.<nsk.share.log.Log: void info(java.lang.Object)>("Test Failed");

        $r16 = (gc.gctests.nativeGC02.nativeGC02) r0;

        virtualinvoke $r16.<gc.gctests.nativeGC02.nativeGC02: void setFailed(boolean)>(1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r17 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r6 = $r17.<gc.gctests.nativeGC02.nativeGC02: nsk.share.log.Log log>;

        $r7 = virtualinvoke $r5.<java.lang.Exception: java.lang.String toString()>();

        interfaceinvoke $r6.<nsk.share.log.Log: void info(java.lang.Object)>($r7);

        $r18 = (gc.gctests.nativeGC02.nativeGC02) r0;

        $r8 = $r18.<gc.gctests.nativeGC02.nativeGC02: nsk.share.log.Log log>;

        interfaceinvoke $r8.<nsk.share.log.Log: void info(java.lang.Object)>("broken test");

        $r19 = (gc.gctests.nativeGC02.nativeGC02) r0;

        virtualinvoke $r19.<gc.gctests.nativeGC02.nativeGC02: void setFailed(boolean)>(1);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private nsk.share.gc.CircularLinkedList buildBigCircularLinkedList()
    {
        nsk.share.gc.CircularLinkedList $r2;
        gc.gctests.nativeGC02.nativeGC02 $r3;
        int $i0, i1;
        nativeGC02 r1;

        r1 := @this: nativeGC02;

        $r2 = new nsk.share.gc.CircularLinkedList;

        specialinvoke $r2.<nsk.share.gc.CircularLinkedList: void <init>(int)>(100);

        i1 = 0;

        goto label2;

     label1:
        virtualinvoke $r2.<nsk.share.gc.CircularLinkedList: void grow()>();

        i1 = i1 + 1;

     label2:
        $r3 = (gc.gctests.nativeGC02.nativeGC02) r1;

        $i0 = $r3.<gc.gctests.nativeGC02.nativeGC02: int count>;

        if i1 < $i0 goto label1;

        return $r2;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r1;
        gc.gctests.nativeGC02.nativeGC02 $r2;
        nsk.share.test.Test $r3;

        r1 := @parameter0: java.lang.String[];

        $r2 = new gc.gctests.nativeGC02.nativeGC02;

        specialinvoke $r2.<gc.gctests.nativeGC02.nativeGC02: void <init>()>();

        $r3 = (nsk.share.test.Test) $r2;

        staticinvoke <nsk.share.test.Tests: void runTest(nsk.share.test.Test,java.lang.String[])>($r3, r1);

        return;
    }
}
