public class gctest03 extends nsk.share.test.TestBase
{
    private java.lang.String[] args;

    public void <init>(java.lang.String[])
    {
        gctest03 r0;
        gc.gctests.gctest03.gctest03 $r2;
        java.lang.String[] r1;

        r0 := @this: gctest03;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<nsk.share.test.TestBase: void <init>()>();

        $r2 = (gc.gctests.gctest03.gctest03) r0;

        $r2.<gc.gctests.gctest03.gctest03: java.lang.String[] args> = r1;

        return;
    }

    public void run()
    {
        java.lang.Integer $r48;
        gc.gctests.gctest03.gctest03 $r62, $r63, $r64;
        gc.gctests.gctest03.TreeNode $r53;
        gc.gctests.gctest03.DataNode $r52;
        java.lang.StringBuilder $r8, $r15, $r22, $r35, $r44, $r45, $r49, $r56, $r58, $r60, $r61;
        java.lang.Throwable $r37, $r65, $r66;
        gc.gctests.gctest03.Redthread $r7, $r10, $r25, $r55;
        java.lang.String $r9, $r16, $r23, $r30, $r36, $r43, $r46;
        gc.gctests.gctest03.Bluethread[] r11;
        java.lang.NumberFormatException $r39;
        nsk.share.TestFailure $r54;
        gc.gctests.gctest03.Yellowthread[] r18;
        gc.gctests.gctest03.Tree $r51;
        gctest03 r0;
        gc.gctests.gctest03.Yellowthread $r21, $r24, $r27, $r59;
        gc.gctests.gctest03.Bluethread $r14, $r17, $r26, $r57;
        java.lang.String[] $r1, $r29, $r42;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10;
        gc.gctests.gctest03.Redthread[] r47;
        java.io.PrintStream $r32, $r34;
        nsk.share.TestBug $r50;
        java.lang.InterruptedException $r31;

        r0 := @this: gctest03;

        i4 = 100000;

        $r62 = (gc.gctests.gctest03.gctest03) r0;

        $r1 = $r62.<gc.gctests.gctest03.gctest03: java.lang.String[] args>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label04;

     label01:
        $r48 = new java.lang.Integer;

        $r63 = (gc.gctests.gctest03.gctest03) r0;

        $r29 = $r63.<gc.gctests.gctest03.gctest03: java.lang.String[] args>;

        $r30 = $r29[0];

        specialinvoke $r48.<java.lang.Integer: void <init>(java.lang.String)>($r30);

        i4 = virtualinvoke $r48.<java.lang.Integer: int intValue()>();

     label02:
        goto label04;

     label03:
        $r39 := @caughtexception;

        $r50 = new nsk.share.TestBug;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bad input to gctest03. Expected integer,  got: ->");

        $r64 = (gc.gctests.gctest03.gctest03) r0;

        $r42 = $r64.<gc.gctests.gctest03.gctest03: java.lang.String[] args>;

        $r43 = $r42[0];

        $r44 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<-");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<nsk.share.TestBug: void <init>(java.lang.String,java.lang.Throwable)>($r46, $r39);

        $r65 = (java.lang.Throwable) $r50;

        throw $r65;

     label04:
        i5 = 0;

        goto label22;

     label05:
        staticinvoke <gc.gctests.gctest03.DataNode: void setDataNodeLimit(int)>(i4);

        staticinvoke <gc.gctests.gctest03.DataNode: void clearDataNodeCount()>();

        $r51 = new gc.gctests.gctest03.Tree;

        specialinvoke $r51.<gc.gctests.gctest03.Tree: void <init>()>();

        i6 = 2;

        goto label10;

     label06:
        $r52 = new gc.gctests.gctest03.DataNode;

        specialinvoke $r52.<gc.gctests.gctest03.DataNode: void <init>(int)>(i6);

        $r53 = new gc.gctests.gctest03.TreeNode;

        specialinvoke $r53.<gc.gctests.gctest03.TreeNode: void <init>(gc.gctests.gctest03.DataNode)>($r52);

        virtualinvoke $r51.<gc.gctests.gctest03.Tree: void insert(gc.gctests.gctest03.TreeNode)>($r53);

     label07:
        goto label09;

     label08:
        $r37 := @caughtexception;

        $r54 = new nsk.share.TestFailure;

        specialinvoke $r54.<nsk.share.TestFailure: void <init>(java.lang.String,java.lang.Throwable)>("DataNodeException caught in gctest03.main()", $r37);

        $r66 = (java.lang.Throwable) $r54;

        throw $r66;

     label09:
        i6 = i6 + 1;

     label10:
        if i6 < 100 goto label06;

        r47 = newarray (gc.gctests.gctest03.Redthread)[10];

        i7 = 0;

        goto label12;

     label11:
        $r55 = new gc.gctests.gctest03.Redthread;

        $i1 = i7 + 1;

        specialinvoke $r55.<gc.gctests.gctest03.Redthread: void <init>(gc.gctests.gctest03.Tree,int)>($r51, $i1);

        r47[i7] = $r55;

        $r7 = r47[i7];

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>(java.lang.String)>("Redthread");

        $r8 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<gc.gctests.gctest03.Redthread: void setName(java.lang.String)>($r9);

        $r10 = r47[i7];

        virtualinvoke $r10.<gc.gctests.gctest03.Redthread: void start()>();

        i7 = i7 + 1;

     label12:
        if i7 < 10 goto label11;

        r11 = newarray (gc.gctests.gctest03.Bluethread)[10];

        i8 = 0;

        goto label14;

     label13:
        $r57 = new gc.gctests.gctest03.Bluethread;

        $i2 = i8 + 1;

        specialinvoke $r57.<gc.gctests.gctest03.Bluethread: void <init>(gc.gctests.gctest03.Tree,int)>($r51, $i2);

        r11[i8] = $r57;

        $r14 = r11[i8];

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bluethread");

        $r15 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<gc.gctests.gctest03.Bluethread: void setName(java.lang.String)>($r16);

        $r17 = r11[i8];

        virtualinvoke $r17.<gc.gctests.gctest03.Bluethread: void start()>();

        i8 = i8 + 1;

     label14:
        if i8 < 10 goto label13;

        r18 = newarray (gc.gctests.gctest03.Yellowthread)[10];

        i9 = 0;

        goto label16;

     label15:
        $r59 = new gc.gctests.gctest03.Yellowthread;

        $i3 = i9 + 1;

        specialinvoke $r59.<gc.gctests.gctest03.Yellowthread: void <init>(gc.gctests.gctest03.Tree,int)>($r51, $i3);

        r18[i9] = $r59;

        $r21 = r18[i9];

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>("Yellowthread");

        $r22 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<gc.gctests.gctest03.Yellowthread: void setName(java.lang.String)>($r23);

        $r24 = r18[i9];

        virtualinvoke $r24.<gc.gctests.gctest03.Yellowthread: void start()>();

        i9 = i9 + 1;

     label16:
        if i9 < 10 goto label15;

        i10 = 0;

        goto label21;

     label17:
        $r25 = r47[i10];

        virtualinvoke $r25.<gc.gctests.gctest03.Redthread: void join()>();

        $r26 = r11[i10];

        virtualinvoke $r26.<gc.gctests.gctest03.Bluethread: void join()>();

        $r27 = r18[i10];

        virtualinvoke $r27.<gc.gctests.gctest03.Yellowthread: void join()>();

     label18:
        goto label20;

     label19:
        $r31 := @caughtexception;

        $r32 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("Error joining with threads in gctest03.main()");

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>(java.lang.String)>("Loop count: ");

        $r35 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r36);

     label20:
        i10 = i10 + 1;

     label21:
        if i10 < 10 goto label17;

        i5 = i5 + 1;

     label22:
        if i5 < 10 goto label05;

        return;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch gc.gctests.gctest03.DataNodeException from label06 to label07 with label08;
        catch java.lang.InterruptedException from label17 to label18 with label19;
    }

    public static void main(java.lang.String[])
    {
        gc.gctests.gctest03.gctest03 $r2;
        java.lang.String[] r1;
        nsk.share.test.Test $r3;

        r1 := @parameter0: java.lang.String[];

        $r2 = new gc.gctests.gctest03.gctest03;

        specialinvoke $r2.<gc.gctests.gctest03.gctest03: void <init>(java.lang.String[])>(r1);

        $r3 = (nsk.share.test.Test) $r2;

        staticinvoke <nsk.share.gc.GC: void runTest(nsk.share.test.Test,java.lang.String[])>($r3, r1);

        return;
    }
}
