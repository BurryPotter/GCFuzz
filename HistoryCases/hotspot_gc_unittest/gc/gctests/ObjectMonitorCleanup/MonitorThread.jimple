public class MonitorThread extends java.lang.Thread
{
    public static volatile java.lang.Object otherObject;
    public boolean completedOk;
    public volatile boolean keepRunning;
    private nsk.share.test.ExecutionController stresser;

    public void <init>(nsk.share.test.ExecutionController)
    {
        MonitorThread r0;
        nsk.share.test.ExecutionController r1;
        java.lang.Object $r3;
        gc.gctests.ObjectMonitorCleanup.MonitorThread $r4;

        r0 := @this: MonitorThread;

        r1 := @parameter0: nsk.share.test.ExecutionController;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r4 = (gc.gctests.ObjectMonitorCleanup.MonitorThread) r0;

        $r4.<gc.gctests.ObjectMonitorCleanup.MonitorThread: nsk.share.test.ExecutionController stresser> = r1;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <gc.gctests.ObjectMonitorCleanup.MonitorThread: java.lang.Object otherObject> = $r3;

        return;
    }

    public final void run()
    {
        MonitorThread r0;
        java.lang.Throwable $r2, $r3, $r4;
        nsk.share.test.ExecutionController $r1;
        gc.gctests.ObjectMonitorCleanup.MonitorThread $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.Object r5;
        boolean $z0, $z1, $z2;

        r0 := @this: MonitorThread;

        entermonitor r0;

     label01:
        $r6 = (gc.gctests.ObjectMonitorCleanup.MonitorThread) r0;

        $r6.<gc.gctests.ObjectMonitorCleanup.MonitorThread: boolean completedOk> = 0;

        $r7 = (gc.gctests.ObjectMonitorCleanup.MonitorThread) r0;

        $r7.<gc.gctests.ObjectMonitorCleanup.MonitorThread: boolean keepRunning> = 1;

        exitmonitor r0;

     label02:
        goto label10;

     label03:
        $r4 := @caughtexception;

        exitmonitor r0;

     label04:
        throw $r4;

     label05:
        r5 = <gc.gctests.ObjectMonitorCleanup.MonitorThread: java.lang.Object otherObject>;

        entermonitor r5;

     label06:
        virtualinvoke r5.<java.lang.Object: void notifyAll()>();

        exitmonitor r5;

     label07:
        goto label10;

     label08:
        $r3 := @caughtexception;

        exitmonitor r5;

     label09:
        throw $r3;

     label10:
        $r8 = (gc.gctests.ObjectMonitorCleanup.MonitorThread) r0;

        $z0 = $r8.<gc.gctests.ObjectMonitorCleanup.MonitorThread: boolean keepRunning>;

        if $z0 == 0 goto label11;

        $r9 = (gc.gctests.ObjectMonitorCleanup.MonitorThread) r0;

        $r1 = $r9.<gc.gctests.ObjectMonitorCleanup.MonitorThread: nsk.share.test.ExecutionController stresser>;

        $z2 = interfaceinvoke $r1.<nsk.share.test.ExecutionController: boolean continueExecution()>();

        if $z2 != 0 goto label05;

     label11:
        entermonitor r0;

     label12:
        $r10 = (gc.gctests.ObjectMonitorCleanup.MonitorThread) r0;

        $z1 = $r10.<gc.gctests.ObjectMonitorCleanup.MonitorThread: boolean keepRunning>;

        $r11 = (gc.gctests.ObjectMonitorCleanup.MonitorThread) r0;

        $r11.<gc.gctests.ObjectMonitorCleanup.MonitorThread: boolean completedOk> = $z1;

        exitmonitor r0;

     label13:
        goto label16;

     label14:
        $r2 := @caughtexception;

        exitmonitor r0;

     label15:
        throw $r2;

     label16:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }
}
