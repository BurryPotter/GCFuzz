public class Juggle01 extends nsk.share.gc.ThreadedGCTest implements nsk.share.gc.gp.GarbageProducerAware, nsk.share.gc.gp.MemoryStrategyAware
{
    private nsk.share.gc.gp.GarbageProducer garbageProducer;
    private nsk.share.gc.gp.MemoryStrategy memoryStrategy;
    private java.lang.Object[] array;
    long objectSize;

    public void <init>()
    {
        Juggle01 r0;

        r0 := @this: Juggle01;

        specialinvoke r0.<nsk.share.gc.ThreadedGCTest: void <init>()>();

        return;
    }

    protected java.lang.Runnable createRunnable(int)
    {
        gc.ArrayJuggle.Juggle01.Juggle01 $r3;
        Juggle01 r1;
        int i0;
        gc.ArrayJuggle.Juggle01.Juggle01$Juggler $r2;
        java.lang.Runnable $r4;

        r1 := @this: Juggle01;

        i0 := @parameter0: int;

        $r2 = new gc.ArrayJuggle.Juggle01.Juggle01$Juggler;

        $r3 = (gc.ArrayJuggle.Juggle01.Juggle01) r1;

        specialinvoke $r2.<gc.ArrayJuggle.Juggle01.Juggle01$Juggler: void <init>(gc.ArrayJuggle.Juggle01.Juggle01)>($r3);

        $r4 = (java.lang.Runnable) $r2;

        return $r4;
    }

    public void run()
    {
        nsk.share.runner.RunParams $r11;
        Juggle01 r0;
        nsk.share.gc.gp.MemoryStrategy $r8, $r12, $r13;
        java.lang.StringBuilder $r4, $r9, $r16, $r20, $r23, $r24, $r25, $r26;
        java.lang.Object[] $r22;
        long $l0, $l2, $l3;
        gc.ArrayJuggle.Juggle01.Juggle01 $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        int $i1, $i4;
        nsk.share.gc.gp.GarbageProducer $r3;
        java.lang.String $r5, $r10, $r17, $r21;
        nsk.share.log.Log $r2, $r7, $r15, $r19;

        r0 := @this: Juggle01;

        $r27 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r2 = $r27.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.log.Log log>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Garbage producer: ");

        $r28 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r3 = $r28.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.gc.gp.GarbageProducer garbageProducer>;

        $r4 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<nsk.share.log.Log: void debug(java.lang.Object)>($r5);

        $r29 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r7 = $r29.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.log.Log log>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Memory strategy: ");

        $r30 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r8 = $r30.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.gc.gp.MemoryStrategy memoryStrategy>;

        $r9 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<nsk.share.log.Log: void debug(java.lang.Object)>($r10);

        $r31 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r11 = $r31.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.runner.RunParams runParams>;

        $l0 = virtualinvoke $r11.<nsk.share.runner.RunParams: long getTestMemory()>();

        $r32 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r12 = $r32.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.gc.gp.MemoryStrategy memoryStrategy>;

        $i1 = virtualinvoke $r12.<nsk.share.gc.gp.MemoryStrategy: int getCount(long)>($l0);

        $r33 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r13 = $r33.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.gc.gp.MemoryStrategy memoryStrategy>;

        $l2 = virtualinvoke $r13.<nsk.share.gc.gp.MemoryStrategy: long getSize(long)>($l0);

        $r34 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r34.<gc.ArrayJuggle.Juggle01.Juggle01: long objectSize> = $l2;

        $r35 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r15 = $r35.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.log.Log log>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Object count: ");

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<nsk.share.log.Log: void debug(java.lang.Object)>($r17);

        $r36 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r19 = $r36.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.log.Log log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Object size: ");

        $r37 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $l3 = $r37.<gc.ArrayJuggle.Juggle01.Juggle01: long objectSize>;

        $r20 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<nsk.share.log.Log: void debug(java.lang.Object)>($r21);

        $i4 = $i1 - 1;

        $r22 = newarray (java.lang.Object)[$i4];

        $r38 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r38.<gc.ArrayJuggle.Juggle01.Juggle01: java.lang.Object[] array> = $r22;

        specialinvoke r0.<nsk.share.gc.ThreadedGCTest: void run()>();

        return;
    }

    public void setGarbageProducer(nsk.share.gc.gp.GarbageProducer)
    {
        gc.ArrayJuggle.Juggle01.Juggle01 $r2;
        nsk.share.gc.gp.GarbageProducer r1;
        Juggle01 r0;

        r0 := @this: Juggle01;

        r1 := @parameter0: nsk.share.gc.gp.GarbageProducer;

        $r2 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r2.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.gc.gp.GarbageProducer garbageProducer> = r1;

        return;
    }

    public void setMemoryStrategy(nsk.share.gc.gp.MemoryStrategy)
    {
        gc.ArrayJuggle.Juggle01.Juggle01 $r2;
        Juggle01 r0;
        nsk.share.gc.gp.MemoryStrategy r1;

        r0 := @this: Juggle01;

        r1 := @parameter0: nsk.share.gc.gp.MemoryStrategy;

        $r2 = (gc.ArrayJuggle.Juggle01.Juggle01) r0;

        $r2.<gc.ArrayJuggle.Juggle01.Juggle01: nsk.share.gc.gp.MemoryStrategy memoryStrategy> = r1;

        return;
    }

    public static void main(java.lang.String[])
    {
        gc.ArrayJuggle.Juggle01.Juggle01 $r2;
        java.lang.String[] r1;
        nsk.share.test.Test $r3;

        r1 := @parameter0: java.lang.String[];

        $r2 = new gc.ArrayJuggle.Juggle01.Juggle01;

        specialinvoke $r2.<gc.ArrayJuggle.Juggle01.Juggle01: void <init>()>();

        $r3 = (nsk.share.test.Test) $r2;

        staticinvoke <nsk.share.gc.GC: void runTest(nsk.share.test.Test,java.lang.String[])>($r3, r1);

        return;
    }
}
