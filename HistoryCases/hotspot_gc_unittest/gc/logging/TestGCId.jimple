public class TestGCId extends java.lang.Object
{

    public void <init>()
    {
        TestGCId r0;

        r0 := @this: TestGCId;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <gc.logging.TestGCId: void testGCId(java.lang.String)>("UseParallelGC");

        staticinvoke <gc.logging.TestGCId: void testGCId(java.lang.String)>("UseG1GC");

        staticinvoke <gc.logging.TestGCId: void testGCId(java.lang.String)>("UseConcMarkSweepGC");

        staticinvoke <gc.logging.TestGCId: void testGCId(java.lang.String)>("UseSerialGC");

        return;
    }

    private static void verifyContainsGCIDs(jdk.test.lib.process.OutputAnalyzer)
    {
        jdk.test.lib.process.OutputAnalyzer r0;

        r0 := @parameter0: jdk.test.lib.process.OutputAnalyzer;

        virtualinvoke r0.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldMatch(java.lang.String)>("\\[.*\\]\\[.*\\]\\[.*\\] GC\\(0\\) ");

        virtualinvoke r0.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldMatch(java.lang.String)>("\\[.*\\]\\[.*\\]\\[.*\\] GC\\(1\\) ");

        virtualinvoke r0.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldHaveExitValue(int)>(0);

        return;
    }

    private static void testGCId(java.lang.String) throws java.lang.Exception
    {
        java.lang.Process $r9;
        java.lang.String[] $r0;
        jdk.test.lib.process.OutputAnalyzer $r8;
        java.lang.StringBuilder $r1, $r3;
        java.lang.Class $r5;
        java.lang.String r2, $r4, $r6;
        java.lang.ProcessBuilder $r7;

        r2 := @parameter0: java.lang.String;

        $r0 = newarray (java.lang.String)[4];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("-XX:+");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[0] = $r4;

        $r0[1] = "-Xlog:gc";

        $r0[2] = "-Xmx10M";

        $r5 = class "Lgc/logging/TestGCId$GCTest;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r0[3] = $r6;

        $r7 = staticinvoke <jdk.test.lib.process.ProcessTools: java.lang.ProcessBuilder createJavaProcessBuilder(java.lang.String[])>($r0);

        $r8 = new jdk.test.lib.process.OutputAnalyzer;

        $r9 = virtualinvoke $r7.<java.lang.ProcessBuilder: java.lang.Process start()>();

        specialinvoke $r8.<jdk.test.lib.process.OutputAnalyzer: void <init>(java.lang.Process)>($r9);

        staticinvoke <gc.logging.TestGCId: void verifyContainsGCIDs(jdk.test.lib.process.OutputAnalyzer)>($r8);

        return;
    }
}
