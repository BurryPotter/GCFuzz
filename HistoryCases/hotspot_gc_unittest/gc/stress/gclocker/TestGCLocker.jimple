public class TestGCLocker extends java.lang.Object
{

    public void <init>()
    {
        TestGCLocker r0;

        r0 := @this: TestGCLocker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static gc.stress.gclocker.Exitable startGCLockerStresser(java.lang.String)
    {
        gc.stress.gclocker.Exitable $r6;
        java.lang.Thread $r4;
        java.lang.String r2;
        gc.stress.gclocker.GCLockerStresser $r3;
        java.lang.Runnable $r5;

        r2 := @parameter0: java.lang.String;

        $r3 = new gc.stress.gclocker.GCLockerStresser;

        specialinvoke $r3.<gc.stress.gclocker.GCLockerStresser: void <init>()>();

        $r4 = new java.lang.Thread;

        $r5 = (java.lang.Runnable) $r3;

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r4.<java.lang.Thread: void setName(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.Thread: void setPriority(int)>(1);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        $r6 = (gc.stress.gclocker.Exitable) $r3;

        return $r6;
    }

    private static gc.stress.gclocker.Exitable startMemoryUser(java.lang.String)
    {
        gc.stress.gclocker.Exitable $r6;
        java.lang.Thread $r4;
        gc.stress.gclocker.MemoryUser $r3;
        java.lang.String r1;
        java.lang.Runnable $r5;

        r1 := @parameter0: java.lang.String;

        $r3 = new gc.stress.gclocker.MemoryUser;

        specialinvoke $r3.<gc.stress.gclocker.MemoryUser: void <init>(java.lang.String)>(r1);

        $r4 = new java.lang.Thread;

        $r5 = (java.lang.Runnable) $r3;

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r4.<java.lang.Thread: void setName(java.lang.String)>("Memory User");

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        $r6 = (gc.stress.gclocker.Exitable) $r3;

        return $r6;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        long l1, $l3, $l4, $l5, $l6, $l8, $l9;
        byte $b7;
        int $i0, $i2, $i10;
        java.lang.String $r4, $r5;
        gc.stress.gclocker.Exitable $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("TestGCLocker");

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $r4 = r0[0];

        $l9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        goto label2;

     label1:
        $l9 = 5L;

     label2:
        l1 = $l9;

        $i2 = lengthof r0;

        if $i2 <= 1 goto label3;

        $r5 = r0[1];

        goto label4;

     label3:
        $r5 = null;

     label4:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = staticinvoke <gc.stress.gclocker.TestGCLocker: gc.stress.gclocker.Exitable startGCLockerStresser(java.lang.String)>("GCLockerStresser1");

        $r2 = staticinvoke <gc.stress.gclocker.TestGCLocker: gc.stress.gclocker.Exitable startGCLockerStresser(java.lang.String)>("GCLockerStresser2");

        $r3 = staticinvoke <gc.stress.gclocker.TestGCLocker: gc.stress.gclocker.Exitable startMemoryUser(java.lang.String)>($r5);

        $l4 = l1 * 60L;

        $l8 = $l4 * 1000L;

        goto label6;

     label5:
        staticinvoke <gc.stress.gclocker.ThreadUtils: void sleep(long)>(10100L);

     label6:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l6 = $l5 - $l3;

        $b7 = $l6 cmp $l8;

        $i10 = (int) $b7;

        if $i10 < 0 goto label5;

        virtualinvoke $r1.<gc.stress.gclocker.Exitable: void exit()>();

        virtualinvoke $r2.<gc.stress.gclocker.Exitable: void exit()>();

        virtualinvoke $r3.<gc.stress.gclocker.Exitable: void exit()>();

        return;
    }
}
