class Decompiler extends java.lang.Object
{
    private gc.stress.gcbasher.ByteCursor cursor;
    private gc.stress.gcbasher.ClassInfo ci;

    public void <init>(byte[])
    {
        byte[] r2;
        Decompiler r0;
        gc.stress.gcbasher.ConstantPoolEntry[] $r6;
        java.lang.StringBuilder $r19, $r22;
        gc.stress.gcbasher.MethodInfo[] $r16;
        gc.stress.gcbasher.Decompiler $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        gc.stress.gcbasher.ByteCursor $r3, $r4, $r5, $r7, $r8, $r13, $r14, $r15, $r21;
        gc.stress.gcbasher.ClassInfo $r24;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r12, $r20;
        java.lang.IllegalArgumentException $r23;
        gc.stress.gcbasher.ConstantPoolEntry $r9, $r11;

        r0 := @this: Decompiler;

        r2 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r21 = new gc.stress.gcbasher.ByteCursor;

        specialinvoke $r21.<gc.stress.gcbasher.ByteCursor: void <init>(byte[])>(r2);

        $r25 = (gc.stress.gcbasher.Decompiler) r0;

        $r25.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor> = $r21;

        $r26 = (gc.stress.gcbasher.Decompiler) r0;

        $r3 = $r26.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i0 = virtualinvoke $r3.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        if $i0 == -889275714 goto label1;

        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bad magic number ");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r23;

     label1:
        $r27 = (gc.stress.gcbasher.Decompiler) r0;

        $r4 = $r27.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r4.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r28 = (gc.stress.gcbasher.Decompiler) r0;

        $r5 = $r28.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r5.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r29 = (gc.stress.gcbasher.Decompiler) r0;

        $r6 = virtualinvoke $r29.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ConstantPoolEntry[] decodeConstantPool()>();

        $r30 = (gc.stress.gcbasher.Decompiler) r0;

        $r7 = $r30.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r7.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r31 = (gc.stress.gcbasher.Decompiler) r0;

        $r8 = $r31.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i1 = virtualinvoke $r8.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r9 = $r6[$i1];

        $i2 = virtualinvoke $r9.<gc.stress.gcbasher.ConstantPoolEntry: int getNameIndex()>();

        $r24 = new gc.stress.gcbasher.ClassInfo;

        $r11 = $r6[$i2];

        $r12 = virtualinvoke $r11.<gc.stress.gcbasher.ConstantPoolEntry: java.lang.String getValue()>();

        specialinvoke $r24.<gc.stress.gcbasher.ClassInfo: void <init>(java.lang.String)>($r12);

        $r32 = (gc.stress.gcbasher.Decompiler) r0;

        $r32.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ClassInfo ci> = $r24;

        $r33 = (gc.stress.gcbasher.Decompiler) r0;

        $r13 = $r33.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r13.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r34 = (gc.stress.gcbasher.Decompiler) r0;

        $r14 = $r34.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i3 = virtualinvoke $r14.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        i4 = 0;

        goto label3;

     label2:
        $r35 = (gc.stress.gcbasher.Decompiler) r0;

        $r15 = $r35.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r15.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        i4 = i4 + 1;

     label3:
        if i4 < $i3 goto label2;

        $r36 = (gc.stress.gcbasher.Decompiler) r0;

        virtualinvoke $r36.<gc.stress.gcbasher.Decompiler: void decodeFields()>();

        $r37 = (gc.stress.gcbasher.Decompiler) r0;

        $r16 = virtualinvoke $r37.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.MethodInfo[] decodeMethods(gc.stress.gcbasher.ConstantPoolEntry[])>($r6);

        $r38 = (gc.stress.gcbasher.Decompiler) r0;

        virtualinvoke $r38.<gc.stress.gcbasher.Decompiler: void decodeMethodDependencies(gc.stress.gcbasher.MethodInfo[],gc.stress.gcbasher.ConstantPoolEntry[])>($r16, $r6);

        return;
    }

    public gc.stress.gcbasher.ClassInfo getClassInfo()
    {
        gc.stress.gcbasher.Decompiler $r2;
        Decompiler r0;
        gc.stress.gcbasher.ClassInfo $r1;

        r0 := @this: Decompiler;

        $r2 = (gc.stress.gcbasher.Decompiler) r0;

        $r1 = $r2.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ClassInfo ci>;

        return $r1;
    }

    private boolean isDependency(java.lang.String, java.lang.String)
    {
        Decompiler r2;
        java.lang.String r0, r1;
        boolean $z0, $z1;

        r2 := @this: Decompiler;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void addDependency(gc.stress.gcbasher.MethodInfo, java.lang.String)
    {
        gc.stress.gcbasher.MethodInfo r1;
        gc.stress.gcbasher.Decompiler $r8;
        Decompiler r5;
        gc.stress.gcbasher.ClassInfo $r6;
        gc.stress.gcbasher.Dependency $r7;
        java.lang.String $r2, $r3, r4;

        r5 := @this: Decompiler;

        r1 := @parameter0: gc.stress.gcbasher.MethodInfo;

        r4 := @parameter1: java.lang.String;

        $r7 = new gc.stress.gcbasher.Dependency;

        $r2 = virtualinvoke r1.<gc.stress.gcbasher.MethodInfo: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<gc.stress.gcbasher.MethodInfo: java.lang.String getDescriptor()>();

        specialinvoke $r7.<gc.stress.gcbasher.Dependency: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, r4);

        $r8 = (gc.stress.gcbasher.Decompiler) r5;

        $r6 = $r8.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ClassInfo ci>;

        virtualinvoke $r6.<gc.stress.gcbasher.ClassInfo: void addResolutionDep(gc.stress.gcbasher.Dependency)>($r7);

        return;
    }

    private java.lang.String resolveName(gc.stress.gcbasher.ConstantPoolEntry[], int)
    {
        Decompiler r4;
        int i0, $i1;
        java.lang.String $r3;
        gc.stress.gcbasher.ConstantPoolEntry[] r0;
        gc.stress.gcbasher.ConstantPoolEntry $r1, $r2;

        r4 := @this: Decompiler;

        r0 := @parameter0: gc.stress.gcbasher.ConstantPoolEntry[];

        i0 := @parameter1: int;

        $r1 = r0[i0];

        $i1 = virtualinvoke $r1.<gc.stress.gcbasher.ConstantPoolEntry: int getNameIndex()>();

        $r2 = r0[$i1];

        $r3 = virtualinvoke $r2.<gc.stress.gcbasher.ConstantPoolEntry: java.lang.String getValue()>();

        return $r3;
    }

    private void decodeMethodDependencies(gc.stress.gcbasher.MethodInfo[], gc.stress.gcbasher.ConstantPoolEntry[])
    {
        gc.stress.gcbasher.MethodInfo r1;
        java.lang.StringBuilder $r22, $r23, $r24, $r27;
        gc.stress.gcbasher.MethodInfo[] r0;
        gc.stress.gcbasher.Decompiler $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        gc.stress.gcbasher.ClassInfo $r8, $r13;
        java.lang.String $r7, $r9, $r12, $r14, $r21, $r25;
        gc.stress.gcbasher.ConstantPoolEntry $r11;
        Decompiler r2;
        gc.stress.gcbasher.ConstantPoolEntry[] r6;
        boolean $z0, $z1;
        gc.stress.gcbasher.ByteCursor $r3, $r4, $r5, $r10, $r15, $r16, $r17, $r18, $r19;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, $i36;
        java.lang.IllegalArgumentException $r28;

        r2 := @this: Decompiler;

        r0 := @parameter0: gc.stress.gcbasher.MethodInfo[];

        r6 := @parameter1: gc.stress.gcbasher.ConstantPoolEntry[];

        i24 = 0;

        goto label16;

     label01:
        r1 = r0[i24];

        $i1 = virtualinvoke r1.<gc.stress.gcbasher.MethodInfo: int getCodeStart()>();

        $i2 = virtualinvoke r1.<gc.stress.gcbasher.MethodInfo: int getCodeLength()>();

        i3 = $i1 + $i2;

        i25 = virtualinvoke r1.<gc.stress.gcbasher.MethodInfo: int getCodeStart()>();

        goto label14;

     label02:
        $r29 = (gc.stress.gcbasher.Decompiler) r2;

        $r3 = $r29.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i4 = virtualinvoke $r3.<gc.stress.gcbasher.ByteCursor: int readUnsignedByteAt(int)>(i25);

        tableswitch($i4)
        {
            case 170: goto label08;
            case 171: goto label05;
            case 172: goto label13;
            case 173: goto label13;
            case 174: goto label13;
            case 175: goto label13;
            case 176: goto label13;
            case 177: goto label13;
            case 178: goto label04;
            case 179: goto label04;
            case 180: goto label04;
            case 181: goto label04;
            case 182: goto label04;
            case 183: goto label04;
            case 184: goto label04;
            case 185: goto label04;
            case 186: goto label13;
            case 187: goto label03;
            case 188: goto label13;
            case 189: goto label03;
            case 190: goto label13;
            case 191: goto label13;
            case 192: goto label03;
            case 193: goto label03;
            case 194: goto label13;
            case 195: goto label13;
            case 196: goto label11;
            case 197: goto label03;
            default: goto label13;
        };

     label03:
        $r30 = (gc.stress.gcbasher.Decompiler) r2;

        $r5 = $r30.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i6 = i25 + 1;

        $i7 = virtualinvoke $r5.<gc.stress.gcbasher.ByteCursor: int readUnsignedShortAt(int)>($i6);

        $r31 = (gc.stress.gcbasher.Decompiler) r2;

        $r7 = virtualinvoke $r31.<gc.stress.gcbasher.Decompiler: java.lang.String resolveName(gc.stress.gcbasher.ConstantPoolEntry[],int)>(r6, $i7);

        $r32 = (gc.stress.gcbasher.Decompiler) r2;

        $r8 = $r32.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ClassInfo ci>;

        $r9 = virtualinvoke $r8.<gc.stress.gcbasher.ClassInfo: java.lang.String getName()>();

        $r33 = (gc.stress.gcbasher.Decompiler) r2;

        $z0 = virtualinvoke $r33.<gc.stress.gcbasher.Decompiler: boolean isDependency(java.lang.String,java.lang.String)>($r7, $r9);

        if $z0 == 0 goto label13;

        $r34 = (gc.stress.gcbasher.Decompiler) r2;

        virtualinvoke $r34.<gc.stress.gcbasher.Decompiler: void addDependency(gc.stress.gcbasher.MethodInfo,java.lang.String)>(r1, $r7);

        goto label13;

     label04:
        $r35 = (gc.stress.gcbasher.Decompiler) r2;

        $r10 = $r35.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i8 = i25 + 1;

        $i9 = virtualinvoke $r10.<gc.stress.gcbasher.ByteCursor: int readUnsignedShortAt(int)>($i8);

        $r11 = r6[$i9];

        $i10 = virtualinvoke $r11.<gc.stress.gcbasher.ConstantPoolEntry: int getClassIndex()>();

        $r36 = (gc.stress.gcbasher.Decompiler) r2;

        $r12 = virtualinvoke $r36.<gc.stress.gcbasher.Decompiler: java.lang.String resolveName(gc.stress.gcbasher.ConstantPoolEntry[],int)>(r6, $i10);

        $r37 = (gc.stress.gcbasher.Decompiler) r2;

        $r13 = $r37.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ClassInfo ci>;

        $r14 = virtualinvoke $r13.<gc.stress.gcbasher.ClassInfo: java.lang.String getName()>();

        $r38 = (gc.stress.gcbasher.Decompiler) r2;

        $z1 = virtualinvoke $r38.<gc.stress.gcbasher.Decompiler: boolean isDependency(java.lang.String,java.lang.String)>($r12, $r14);

        if $z1 == 0 goto label13;

        $r39 = (gc.stress.gcbasher.Decompiler) r2;

        virtualinvoke $r39.<gc.stress.gcbasher.Decompiler: void addDependency(gc.stress.gcbasher.MethodInfo,java.lang.String)>(r1, $r12);

        goto label13;

     label05:
        i26 = i25 + 1;

        $i11 = virtualinvoke r1.<gc.stress.gcbasher.MethodInfo: int getCodeStart()>();

        i27 = i26 - $i11;

        goto label07;

     label06:
        i27 = i27 + 1;

        i26 = i26 + 1;

     label07:
        $i12 = i27 % 4;

        if $i12 != 0 goto label06;

        $r40 = (gc.stress.gcbasher.Decompiler) r2;

        $r15 = $r40.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r15.<gc.stress.gcbasher.ByteCursor: int readIntAt(int)>(i26);

        i28 = i26 + 4;

        $r41 = (gc.stress.gcbasher.Decompiler) r2;

        $r16 = $r41.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i13 = virtualinvoke $r16.<gc.stress.gcbasher.ByteCursor: int readIntAt(int)>(i28);

        i29 = i28 + 4;

        $i14 = 8 * $i13;

        i25 = i29 + $i14;

        goto label14;

     label08:
        i30 = i25 + 1;

        $i15 = virtualinvoke r1.<gc.stress.gcbasher.MethodInfo: int getCodeStart()>();

        i31 = i30 - $i15;

        goto label10;

     label09:
        i31 = i31 + 1;

        i30 = i30 + 1;

     label10:
        $i16 = i31 % 4;

        if $i16 != 0 goto label09;

        $r42 = (gc.stress.gcbasher.Decompiler) r2;

        $r17 = $r42.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r17.<gc.stress.gcbasher.ByteCursor: int readIntAt(int)>(i30);

        i32 = i30 + 4;

        $r43 = (gc.stress.gcbasher.Decompiler) r2;

        $r18 = $r43.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i17 = virtualinvoke $r18.<gc.stress.gcbasher.ByteCursor: int readIntAt(int)>(i32);

        i33 = i32 + 4;

        $r44 = (gc.stress.gcbasher.Decompiler) r2;

        $r19 = $r44.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i18 = virtualinvoke $r19.<gc.stress.gcbasher.ByteCursor: int readIntAt(int)>(i33);

        i34 = i33 + 4;

        $i19 = $i18 - $i17;

        $i20 = $i19 + 1;

        $i21 = 4 * $i20;

        i25 = i34 + $i21;

        goto label14;

     label11:
        $r45 = (gc.stress.gcbasher.Decompiler) r2;

        $r4 = $r45.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        i35 = i25 + 1;

        $i5 = virtualinvoke $r4.<gc.stress.gcbasher.ByteCursor: int readUnsignedByteAt(int)>(i35);

        if $i5 != 132 goto label12;

        i25 = i35 + 5;

        goto label14;

     label12:
        i25 = i35 + 3;

        goto label14;

     label13:
        $i36 = staticinvoke <gc.stress.gcbasher.Bytecode: int getLength(int)>($i4);

        i25 = i25 + $i36;

     label14:
        if i25 < i3 goto label02;

        $i22 = i25 - i3;

        if $i22 <= 1 goto label15;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("bad finish for method ");

        $r21 = virtualinvoke r1.<gc.stress.gcbasher.MethodInfo: java.lang.String getName()>();

        $r22 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End + ");

        $i23 = i25 - i3;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r28;

     label15:
        i24 = i24 + 1;

     label16:
        $i0 = lengthof r0;

        if i24 < $i0 goto label01;

        return;
    }

    private gc.stress.gcbasher.MethodInfo[] decodeMethods(gc.stress.gcbasher.ConstantPoolEntry[])
    {
        gc.stress.gcbasher.MethodInfo $r29;
        gc.stress.gcbasher.MethodInfo[] r2;
        gc.stress.gcbasher.Decompiler $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48;
        java.lang.String $r7, $r10, $r15;
        gc.stress.gcbasher.ConstantPoolEntry $r6, $r9, $r14;
        Decompiler r0;
        gc.stress.gcbasher.ConstantPoolEntry[] r4;
        boolean $z0;
        gc.stress.gcbasher.ByteCursor $r1, $r3, $r5, $r8, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16;

        r0 := @this: Decompiler;

        r4 := @parameter0: gc.stress.gcbasher.ConstantPoolEntry[];

        $r30 = (gc.stress.gcbasher.Decompiler) r0;

        $r1 = $r30.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i0 = virtualinvoke $r1.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        r2 = newarray (gc.stress.gcbasher.MethodInfo)[$i0];

        i12 = 0;

        goto label8;

     label1:
        $r31 = (gc.stress.gcbasher.Decompiler) r0;

        $r3 = $r31.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r3.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r32 = (gc.stress.gcbasher.Decompiler) r0;

        $r5 = $r32.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i2 = virtualinvoke $r5.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r6 = r4[$i2];

        $r7 = virtualinvoke $r6.<gc.stress.gcbasher.ConstantPoolEntry: java.lang.String getValue()>();

        $r33 = (gc.stress.gcbasher.Decompiler) r0;

        $r8 = $r33.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i3 = virtualinvoke $r8.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r9 = r4[$i3];

        $r10 = virtualinvoke $r9.<gc.stress.gcbasher.ConstantPoolEntry: java.lang.String getValue()>();

        i13 = 0;

        i14 = 0;

        $r34 = (gc.stress.gcbasher.Decompiler) r0;

        $r11 = $r34.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i4 = virtualinvoke $r11.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        i15 = 0;

        goto label7;

     label2:
        $r35 = (gc.stress.gcbasher.Decompiler) r0;

        $r12 = $r35.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i5 = virtualinvoke $r12.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r36 = (gc.stress.gcbasher.Decompiler) r0;

        $r13 = $r36.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i6 = virtualinvoke $r13.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        $r14 = r4[$i5];

        $r15 = virtualinvoke $r14.<gc.stress.gcbasher.ConstantPoolEntry: java.lang.String getValue()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("Code");

        if $z0 == 0 goto label5;

        $r37 = (gc.stress.gcbasher.Decompiler) r0;

        $r17 = $r37.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r17.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r38 = (gc.stress.gcbasher.Decompiler) r0;

        $r18 = $r38.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r18.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r39 = (gc.stress.gcbasher.Decompiler) r0;

        $r19 = $r39.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i7 = virtualinvoke $r19.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        i13 = $i7;

        $r40 = (gc.stress.gcbasher.Decompiler) r0;

        $r20 = $r40.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        i14 = virtualinvoke $r20.<gc.stress.gcbasher.ByteCursor: int getOffset()>();

        $r41 = (gc.stress.gcbasher.Decompiler) r0;

        $r21 = $r41.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r21.<gc.stress.gcbasher.ByteCursor: void skipBytes(int)>($i7);

        $r42 = (gc.stress.gcbasher.Decompiler) r0;

        $r23 = $r42.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $r43 = (gc.stress.gcbasher.Decompiler) r0;

        $r22 = $r43.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i8 = virtualinvoke $r22.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $i9 = $i8 * 8;

        virtualinvoke $r23.<gc.stress.gcbasher.ByteCursor: void skipBytes(int)>($i9);

        $r44 = (gc.stress.gcbasher.Decompiler) r0;

        $r24 = $r44.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i10 = virtualinvoke $r24.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        i16 = 0;

        goto label4;

     label3:
        $r45 = (gc.stress.gcbasher.Decompiler) r0;

        $r25 = $r45.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r25.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r46 = (gc.stress.gcbasher.Decompiler) r0;

        $r27 = $r46.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $r47 = (gc.stress.gcbasher.Decompiler) r0;

        $r26 = $r47.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i11 = virtualinvoke $r26.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        virtualinvoke $r27.<gc.stress.gcbasher.ByteCursor: void skipBytes(int)>($i11);

        i16 = i16 + 1;

     label4:
        if i16 < $i10 goto label3;

        goto label6;

     label5:
        $r48 = (gc.stress.gcbasher.Decompiler) r0;

        $r16 = $r48.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r16.<gc.stress.gcbasher.ByteCursor: void skipBytes(int)>($i6);

     label6:
        i15 = i15 + 1;

     label7:
        if i15 < $i4 goto label2;

        $r29 = new gc.stress.gcbasher.MethodInfo;

        specialinvoke $r29.<gc.stress.gcbasher.MethodInfo: void <init>(java.lang.String,java.lang.String,int,int)>($r7, $r10, i13, i14);

        r2[i12] = $r29;

        i12 = i12 + 1;

     label8:
        $i1 = lengthof r2;

        if i12 < $i1 goto label1;

        return r2;
    }

    private void decodeFields()
    {
        gc.stress.gcbasher.Decompiler $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        gc.stress.gcbasher.ByteCursor $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        Decompiler r0;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: Decompiler;

        $r9 = (gc.stress.gcbasher.Decompiler) r0;

        $r1 = $r9.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i0 = virtualinvoke $r1.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        i3 = 0;

        goto label4;

     label1:
        $r10 = (gc.stress.gcbasher.Decompiler) r0;

        $r2 = $r10.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r2.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r11 = (gc.stress.gcbasher.Decompiler) r0;

        $r3 = $r11.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r3.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r12 = (gc.stress.gcbasher.Decompiler) r0;

        $r4 = $r12.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r4.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r13 = (gc.stress.gcbasher.Decompiler) r0;

        $r5 = $r13.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i1 = virtualinvoke $r5.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        i4 = 0;

        goto label3;

     label2:
        $r14 = (gc.stress.gcbasher.Decompiler) r0;

        $r6 = $r14.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r6.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r15 = (gc.stress.gcbasher.Decompiler) r0;

        $r7 = $r15.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i2 = virtualinvoke $r7.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        $r16 = (gc.stress.gcbasher.Decompiler) r0;

        $r8 = $r16.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r8.<gc.stress.gcbasher.ByteCursor: void skipBytes(int)>($i2);

        i4 = i4 + 1;

     label3:
        if i4 < $i1 goto label2;

        i3 = i3 + 1;

     label4:
        if i3 < $i0 goto label1;

        return;
    }

    private gc.stress.gcbasher.ConstantPoolEntry[] decodeConstantPool()
    {
        java.lang.StringBuilder $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r40, $r47;
        gc.stress.gcbasher.Decompiler $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70;
        java.lang.String $r27, $r29, $r39, $r41;
        gc.stress.gcbasher.ConstantPoolEntry $r43, $r44, $r45, $r46;
        Decompiler r0;
        gc.stress.gcbasher.ConstantPoolEntry[] r2;
        gc.stress.gcbasher.ByteCursor $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        java.lang.IllegalArgumentException $r48;

        r0 := @this: Decompiler;

        $r49 = (gc.stress.gcbasher.Decompiler) r0;

        $r1 = $r49.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i0 = virtualinvoke $r1.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        r2 = newarray (gc.stress.gcbasher.ConstantPoolEntry)[$i0];

        i8 = 1;

        goto label16;

     label01:
        $r50 = (gc.stress.gcbasher.Decompiler) r0;

        $r3 = $r50.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i1 = virtualinvoke $r3.<gc.stress.gcbasher.ByteCursor: int readUnsignedByte()>();

        tableswitch($i1)
        {
            case 1: goto label10;
            case 2: goto label14;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label02;
            case 8: goto label04;
            case 9: goto label03;
            case 10: goto label03;
            case 11: goto label03;
            case 12: goto label09;
            case 13: goto label14;
            case 14: goto label14;
            case 15: goto label11;
            case 16: goto label12;
            case 17: goto label14;
            case 18: goto label13;
            default: goto label14;
        };

     label02:
        $r43 = new gc.stress.gcbasher.ConstantPoolEntry;

        $r51 = (gc.stress.gcbasher.Decompiler) r0;

        $r17 = $r51.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i4 = virtualinvoke $r17.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        specialinvoke $r43.<gc.stress.gcbasher.ConstantPoolEntry: void <init>(int)>($i4);

        r2[i8] = $r43;

        goto label15;

     label03:
        $r44 = new gc.stress.gcbasher.ConstantPoolEntry;

        $r52 = (gc.stress.gcbasher.Decompiler) r0;

        $r13 = $r52.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i3 = virtualinvoke $r13.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        specialinvoke $r44.<gc.stress.gcbasher.ConstantPoolEntry: void <init>(int)>($i3);

        r2[i8] = $r44;

        $r53 = (gc.stress.gcbasher.Decompiler) r0;

        $r14 = $r53.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r14.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        goto label15;

     label04:
        $r54 = (gc.stress.gcbasher.Decompiler) r0;

        $r15 = $r54.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r15.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        goto label15;

     label05:
        $r55 = (gc.stress.gcbasher.Decompiler) r0;

        $r23 = $r55.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r23.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        goto label15;

     label06:
        $r56 = (gc.stress.gcbasher.Decompiler) r0;

        $r22 = $r56.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r22.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        goto label15;

     label07:
        $r57 = (gc.stress.gcbasher.Decompiler) r0;

        $r20 = $r57.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r20.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        $r58 = (gc.stress.gcbasher.Decompiler) r0;

        $r21 = $r58.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r21.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        i8 = i8 + 1;

        goto label15;

     label08:
        $r59 = (gc.stress.gcbasher.Decompiler) r0;

        $r18 = $r59.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r18.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        $r60 = (gc.stress.gcbasher.Decompiler) r0;

        $r19 = $r60.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r19.<gc.stress.gcbasher.ByteCursor: int readInt()>();

        i8 = i8 + 1;

        goto label15;

     label09:
        $r45 = new gc.stress.gcbasher.ConstantPoolEntry;

        $r61 = (gc.stress.gcbasher.Decompiler) r0;

        $r10 = $r61.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i2 = virtualinvoke $r10.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        specialinvoke $r45.<gc.stress.gcbasher.ConstantPoolEntry: void <init>(int)>($i2);

        r2[i8] = $r45;

        $r62 = (gc.stress.gcbasher.Decompiler) r0;

        $r11 = $r62.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r11.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        goto label15;

     label10:
        $r63 = (gc.stress.gcbasher.Decompiler) r0;

        $r24 = $r63.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i5 = virtualinvoke $r24.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r46 = new gc.stress.gcbasher.ConstantPoolEntry;

        $r64 = (gc.stress.gcbasher.Decompiler) r0;

        $r26 = $r64.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $r27 = virtualinvoke $r26.<gc.stress.gcbasher.ByteCursor: java.lang.String readUtf8(int)>($i5);

        specialinvoke $r46.<gc.stress.gcbasher.ConstantPoolEntry: void <init>(java.lang.String)>($r27);

        r2[i8] = $r46;

        goto label15;

     label11:
        $r65 = (gc.stress.gcbasher.Decompiler) r0;

        $r7 = $r65.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r7.<gc.stress.gcbasher.ByteCursor: int readUnsignedByte()>();

        $r66 = (gc.stress.gcbasher.Decompiler) r0;

        $r8 = $r66.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r8.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        goto label15;

     label12:
        $r67 = (gc.stress.gcbasher.Decompiler) r0;

        $r6 = $r67.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r6.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        goto label15;

     label13:
        $r68 = (gc.stress.gcbasher.Decompiler) r0;

        $r4 = $r68.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r4.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        $r69 = (gc.stress.gcbasher.Decompiler) r0;

        $r5 = $r69.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        virtualinvoke $r5.<gc.stress.gcbasher.ByteCursor: int readUnsignedShort()>();

        goto label15;

     label14:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown constant pool type ");

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r30 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CPE ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $i6 = lengthof r2;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Byte offset ");

        $r70 = (gc.stress.gcbasher.Decompiler) r0;

        $r38 = $r70.<gc.stress.gcbasher.Decompiler: gc.stress.gcbasher.ByteCursor cursor>;

        $i7 = virtualinvoke $r38.<gc.stress.gcbasher.ByteCursor: int getOffset()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        $r48 = new java.lang.IllegalArgumentException;

        specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41);

        throw $r48;

     label15:
        i8 = i8 + 1;

     label16:
        $i9 = lengthof r2;

        if i8 < $i9 goto label01;

        return r2;
    }
}
