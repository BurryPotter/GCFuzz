class ObjStorage extends java.lang.Object
{
    public final java.lang.Object[][] storage;
    public int usedCount;

    void <init>(int)
    {
        java.lang.Object[][] $r1;
        ObjStorage r0;
        int i0;
        gc.stress.ObjStorage $r2, $r3;

        r0 := @this: ObjStorage;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Object[])[i0];

        $r2 = (gc.stress.ObjStorage) r0;

        $r2.<gc.stress.ObjStorage: java.lang.Object[][] storage> = $r1;

        $r3 = (gc.stress.ObjStorage) r0;

        $r3.<gc.stress.ObjStorage: int usedCount> = 0;

        return;
    }

    public boolean isFull()
    {
        java.lang.Object[][] $r1;
        ObjStorage r0;
        int $i0, $i1;
        gc.stress.ObjStorage $r2, $r3;

        r0 := @this: ObjStorage;

        $r2 = (gc.stress.ObjStorage) r0;

        $i1 = $r2.<gc.stress.ObjStorage: int usedCount>;

        $r3 = (gc.stress.ObjStorage) r0;

        $r1 = $r3.<gc.stress.ObjStorage: java.lang.Object[][] storage>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void addArray(java.lang.Object[])
    {
        java.lang.IllegalStateException $r8;
        java.lang.Object[] r2;
        java.lang.Object[][] $r1;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        gc.stress.ObjStorage $r9, $r10, $r11, $r12, $r13;
        boolean $z0;
        ObjStorage r0;
        java.lang.StringBuilder $r5, $r7;

        r0 := @this: ObjStorage;

        r2 := @parameter0: java.lang.Object[];

        $r9 = (gc.stress.ObjStorage) r0;

        $z0 = virtualinvoke $r9.<gc.stress.ObjStorage: boolean isFull()>();

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Storage full maximum number of allowed elements: ");

        $r10 = (gc.stress.ObjStorage) r0;

        $i2 = $r10.<gc.stress.ObjStorage: int usedCount>;

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label1:
        $r11 = (gc.stress.ObjStorage) r0;

        $r1 = $r11.<gc.stress.ObjStorage: java.lang.Object[][] storage>;

        $r12 = (gc.stress.ObjStorage) r0;

        $i0 = $r12.<gc.stress.ObjStorage: int usedCount>;

        $i1 = $i0 + 1;

        $r13 = (gc.stress.ObjStorage) r0;

        $r13.<gc.stress.ObjStorage: int usedCount> = $i1;

        $r1[$i0] = r2;

        return;
    }

    public void setArrayAt(int, java.lang.Object[])
    {
        java.lang.Object[] r1;
        ObjStorage r0;
        java.lang.Object[][] $r2;
        int i0, $i1, $i2;
        gc.stress.ObjStorage $r3, $r4;

        r0 := @this: ObjStorage;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        $r3 = (gc.stress.ObjStorage) r0;

        $r2 = $r3.<gc.stress.ObjStorage: java.lang.Object[][] storage>;

        $r4 = (gc.stress.ObjStorage) r0;

        $i1 = $r4.<gc.stress.ObjStorage: int usedCount>;

        $i2 = i0 % $i1;

        $r2[$i2] = r1;

        return;
    }

    public java.lang.Object[] getArrayAt(int)
    {
        java.lang.Object[] $r2;
        ObjStorage r0;
        java.lang.Object[][] $r1;
        int i0, $i1, $i2;
        gc.stress.ObjStorage $r3, $r4;

        r0 := @this: ObjStorage;

        i0 := @parameter0: int;

        $r3 = (gc.stress.ObjStorage) r0;

        $r1 = $r3.<gc.stress.ObjStorage: java.lang.Object[][] storage>;

        $r4 = (gc.stress.ObjStorage) r0;

        $i1 = $r4.<gc.stress.ObjStorage: int usedCount>;

        $i2 = i0 % $i1;

        $r2 = $r1[$i2];

        return $r2;
    }
}
