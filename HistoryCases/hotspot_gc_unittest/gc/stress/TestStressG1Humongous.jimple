public class TestStressG1Humongous extends java.lang.Object
{

    public void <init>()
    {
        TestStressG1Humongous r0;

        r0 := @this: TestStressG1Humongous;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        short $s1, $s2, $s3, $s4;
        java.lang.String[] r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        $z0 = staticinvoke <jdk.test.lib.Platform: boolean is32bit()>();

        if $z0 == 0 goto label1;

        $s4 = 512;

        $s3 = 512;

        $s2 = 512;

        $s1 = 512;

        goto label2;

     label1:
        $s4 = 1024;

        $s3 = 1024;

        $s2 = 1024;

        $s1 = 1024;

     label2:
        staticinvoke <gc.stress.TestStressG1Humongous: void run(int,int,int,double,int)>($s1, 4, 3, 1.1, 120);

        staticinvoke <gc.stress.TestStressG1Humongous: void run(int,int,int,double,int)>($s3, 16, 5, 2.1, 120);

        staticinvoke <gc.stress.TestStressG1Humongous: void run(int,int,int,double,int)>($s2, 32, 4, 0.6, 120);

        staticinvoke <gc.stress.TestStressG1Humongous: void run(int,int,int,double,int)>($s4, 1, 7, 0.6, 600);

        return;
    }

    private static void run(int, int, int, double, int) throws java.lang.Exception
    {
        java.lang.Process $r30;
        jdk.test.lib.process.OutputAnalyzer $r29;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21;
        java.lang.Object[] $r26;
        java.lang.String[] $r1, $r2, $r25, $r27;
        java.util.ArrayList $r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String $r6, $r10, $r13, $r16, $r19, $r22, $r24;
        java.lang.ProcessBuilder $r28;
        double d0;
        java.lang.Class $r23;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        d0 := @parameter3: double;

        i2 := @parameter4: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = staticinvoke <jdk.test.lib.Utils: java.lang.String[] getTestJavaOpts()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r0, $r1);

        $r2 = newarray (java.lang.String)[9];

        $r2[0] = "-Xlog:gc=debug";

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("-Xmx");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("m");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2[1] = $r6;

        $r2[2] = "-XX:+UseG1GC";

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("-XX:G1HeapRegionSize=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("m");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2[3] = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("-Dtimeout=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2[4] = $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("-Dthreads=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2[5] = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("-Dhumongoussize=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2[6] = $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("-Dregionsize=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2[7] = $r22;

        $r23 = class "Lgc/stress/TestStressG1HumongousImpl;";

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r2[8] = $r24;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r0, $r2);

        $i4 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r25 = newarray (java.lang.String)[$i4];

        $r26 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r25);

        $r27 = (java.lang.String[]) $r26;

        $r28 = staticinvoke <jdk.test.lib.process.ProcessTools: java.lang.ProcessBuilder createJavaProcessBuilder(java.lang.String[])>($r27);

        $r29 = new jdk.test.lib.process.OutputAnalyzer;

        $r30 = virtualinvoke $r28.<java.lang.ProcessBuilder: java.lang.Process start()>();

        specialinvoke $r29.<jdk.test.lib.process.OutputAnalyzer: void <init>(java.lang.Process)>($r30);

        virtualinvoke $r29.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldHaveExitValue(int)>(0);

        return;
    }
}
