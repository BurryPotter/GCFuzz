public class TestCMSClassUnloadingEnabledHWM extends java.lang.Object
{
    private static long MetaspaceSize;
    private static long YoungGenSize;

    static void <clinit>()
    {
        <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: long MetaspaceSize> = 33554432L;

        <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: long YoungGenSize> = 33554432L;

        return;
    }

    public void <init>()
    {
        TestCMSClassUnloadingEnabledHWM r0;

        r0 := @this: TestCMSClassUnloadingEnabledHWM;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static jdk.test.lib.process.OutputAnalyzer run(boolean) throws java.lang.Exception
    {
        java.lang.String[] $r0;
        long $l0, $l1, $l2;
        java.lang.String $r3, $r6, $r10, $r12, $r15, $r19;
        java.lang.ProcessBuilder $r16;
        boolean z0;
        java.lang.Process $r18;
        jdk.test.lib.process.OutputAnalyzer $r17;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r13, $r14;
        java.lang.Class $r11;

        z0 := @parameter0: boolean;

        $r0 = newarray (java.lang.String)[13];

        $r0[0] = "-Xbootclasspath/a:.";

        $r0[1] = "-XX:+UnlockDiagnosticVMOptions";

        $r0[2] = "-XX:+WhiteBoxAPI";

        $r0[3] = "-Xmx128m";

        $r0[4] = "-XX:CMSMaxAbortablePrecleanTime=1";

        $r0[5] = "-XX:CMSWaitDuration=50";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("-XX:MetaspaceSize=");

        $l0 = <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: long MetaspaceSize>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[6] = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("-Xmn");

        $l1 = <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: long YoungGenSize>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[7] = $r6;

        $r0[8] = "-XX:+UseConcMarkSweepGC";

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("-XX:");

        if z0 == 0 goto label1;

        $r19 = "+";

        goto label2;

     label1:
        $r19 = "-";

     label2:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CMSClassUnloadingEnabled");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[9] = $r10;

        $r0[10] = "-Xlog:gc";

        $r11 = class "Lgc/class_unloading/TestCMSClassUnloadingEnabledHWM$AllocateBeyondMetaspaceSize;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r0[11] = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $l2 = <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: long MetaspaceSize>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[12] = $r15;

        $r16 = staticinvoke <jdk.test.lib.process.ProcessTools: java.lang.ProcessBuilder createJavaProcessBuilder(java.lang.String[])>($r0);

        $r17 = new jdk.test.lib.process.OutputAnalyzer;

        $r18 = virtualinvoke $r16.<java.lang.ProcessBuilder: java.lang.Process start()>();

        specialinvoke $r17.<jdk.test.lib.process.OutputAnalyzer: void <init>(java.lang.Process)>($r18);

        return $r17;
    }

    public static jdk.test.lib.process.OutputAnalyzer runWithCMSClassUnloading() throws java.lang.Exception
    {
        jdk.test.lib.process.OutputAnalyzer $r0;

        $r0 = staticinvoke <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: jdk.test.lib.process.OutputAnalyzer run(boolean)>(1);

        return $r0;
    }

    public static jdk.test.lib.process.OutputAnalyzer runWithoutCMSClassUnloading() throws java.lang.Exception
    {
        jdk.test.lib.process.OutputAnalyzer $r0;

        $r0 = staticinvoke <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: jdk.test.lib.process.OutputAnalyzer run(boolean)>(0);

        return $r0;
    }

    public static void testWithoutCMSClassUnloading() throws java.lang.Exception
    {
        jdk.test.lib.process.OutputAnalyzer $r0;

        $r0 = staticinvoke <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: jdk.test.lib.process.OutputAnalyzer runWithoutCMSClassUnloading()>();

        virtualinvoke $r0.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldMatch(java.lang.String)>(".*Pause Full.*");

        virtualinvoke $r0.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldNotMatch(java.lang.String)>(".*Pause Initial Mark.*");

        return;
    }

    public static void testWithCMSClassUnloading() throws java.lang.Exception
    {
        jdk.test.lib.process.OutputAnalyzer $r0;

        $r0 = staticinvoke <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: jdk.test.lib.process.OutputAnalyzer runWithCMSClassUnloading()>();

        virtualinvoke $r0.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldMatch(java.lang.String)>(".*Pause Initial Mark.*");

        virtualinvoke $r0.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldNotMatch(java.lang.String)>(".*Pause Full.*");

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: void testWithCMSClassUnloading()>();

        staticinvoke <gc.class_unloading.TestCMSClassUnloadingEnabledHWM: void testWithoutCMSClassUnloading()>();

        return;
    }
}
