public class MemStat extends java.lang.Object
{

    public void <init>()
    {
        MemStat r0;

        r0 := @this: MemStat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        long $l0, $l1, $l2;
        java.lang.String[] r13;
        java.lang.String $r4, $r8, $r12;
        java.io.PrintStream $r2, $r6, $r10;
        java.lang.Runtime $r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11;

        r13 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Max memory   : ");

        $l0 = virtualinvoke $r0.<java.lang.Runtime: long maxMemory()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Total memory : ");

        $l1 = virtualinvoke $r0.<java.lang.Runtime: long totalMemory()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Free memory  : ");

        $l2 = virtualinvoke $r0.<java.lang.Runtime: long freeMemory()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r12);

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;
    }
}
