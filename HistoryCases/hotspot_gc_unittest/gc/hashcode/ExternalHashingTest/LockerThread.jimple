class LockerThread extends java.lang.Object implements java.lang.Runnable
{
    java.lang.Object[] theList;
    int count;

    void <init>(java.lang.Object[])
    {
        java.lang.Object[] r1;
        LockerThread r0;
        gc.hashcode.ExternalHashingTest.LockerThread $r2, $r3;

        r0 := @this: LockerThread;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = (gc.hashcode.ExternalHashingTest.LockerThread) r0;

        $r2.<gc.hashcode.ExternalHashingTest.LockerThread: java.lang.Object[] theList> = r1;

        $r3 = (gc.hashcode.ExternalHashingTest.LockerThread) r0;

        $r3.<gc.hashcode.ExternalHashingTest.LockerThread: int count> = 0;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r1, $r2;
        LockerThread r0;
        gc.hashcode.ExternalHashingTest.LockerThread $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: LockerThread;

        goto label2;

     label1:
        staticinvoke <gc.hashcode.ExternalHashingTest.ExternalHashingTest: void pause()>();

     label2:
        $z0 = <gc.hashcode.ExternalHashingTest.ExternalHashingTest: boolean startingGun>;

        if $z0 == 0 goto label1;

        i3 = 0;

        goto label9;

     label3:
        $r5 = (gc.hashcode.ExternalHashingTest.LockerThread) r0;

        $r2 = $r5.<gc.hashcode.ExternalHashingTest.LockerThread: java.lang.Object[] theList>;

        $r3 = $r2[i3];

        entermonitor $r3;

     label4:
        $r6 = (gc.hashcode.ExternalHashingTest.LockerThread) r0;

        $i1 = $r6.<gc.hashcode.ExternalHashingTest.LockerThread: int count>;

        $i2 = $i1 + 1;

        $r7 = (gc.hashcode.ExternalHashingTest.LockerThread) r0;

        $r7.<gc.hashcode.ExternalHashingTest.LockerThread: int count> = $i2;

        exitmonitor $r3;

     label5:
        goto label8;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r4;

     label8:
        i3 = i3 + 1;

     label9:
        $r8 = (gc.hashcode.ExternalHashingTest.LockerThread) r0;

        $r1 = $r8.<gc.hashcode.ExternalHashingTest.LockerThread: java.lang.Object[] theList>;

        $i0 = lengthof $r1;

        if i3 < $i0 goto label3;

        <gc.hashcode.ExternalHashingTest.ExternalHashingTest: boolean finishLocking> = 1;

        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int getCount()
    {
        LockerThread r0;
        int $i0;
        gc.hashcode.ExternalHashingTest.LockerThread $r1;

        r0 := @this: LockerThread;

        $r1 = (gc.hashcode.ExternalHashingTest.LockerThread) r0;

        $i0 = $r1.<gc.hashcode.ExternalHashingTest.LockerThread: int count>;

        return $i0;
    }
}
