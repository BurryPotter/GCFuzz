class HashCodeSimpleTest$1 extends java.lang.Object implements java.lang.Runnable
{
    long counter;
    final gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest this$0;

    void <init>(gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest)
    {
        HashCodeSimpleTest$1 r0;
        gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1 $r2, $r3;
        gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest r1;

        r0 := @this: HashCodeSimpleTest$1;

        r1 := @parameter0: gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest;

        $r2 = (gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1) r0;

        $r2.<gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1: gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = (gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1) r0;

        $r3.<gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1: long counter> = 0L;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r18;
        HashCodeSimpleTest$1 r7;
        long $l2, $l3, $l4, $l6, $l7;
        byte $b5;
        int $i0, $i1, i8;
        java.lang.String $r6, $r11, $r13;
        gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1 $r19, $r20, $r21, $r22;
        gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest $r8;
        nsk.share.TestFailure $r16;
        java.lang.StringBuilder $r3, $r4, $r5, $r12, $r15, $r17;
        nsk.share.log.Log $r9;
        java.lang.Object $r14;

        r7 := @this: HashCodeSimpleTest$1;

        $r14 = new java.lang.Object;

        specialinvoke $r14.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke $r14.<java.lang.Object: int hashCode()>();

        i8 = 0;

        goto label3;

     label1:
        $i1 = virtualinvoke $r14.<java.lang.Object: int hashCode()>();

        if $i1 == $i0 goto label2;

        $r16 = new nsk.share.TestFailure;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Repeated hash code queries broken: ");

        $r3 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<nsk.share.TestFailure: void <init>(java.lang.String)>($r6);

        $r18 = (java.lang.Throwable) $r16;

        throw $r18;

     label2:
        i8 = i8 + 1;

     label3:
        if i8 < 100 goto label1;

        $r19 = (gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1) r7;

        $l2 = $r19.<gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1: long counter>;

        $l3 = $l2 + 1L;

        $r20 = (gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1) r7;

        $r20.<gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1: long counter> = $l3;

        $l4 = $l2 % 1000000L;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label4;

        $r21 = (gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1) r7;

        $r8 = $r21.<gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1: gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest this$0>;

        $r9 = staticinvoke <gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest: nsk.share.log.Log access$0(gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest)>($r8);

        $r17 = new java.lang.StringBuilder;

        $r22 = (gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1) r7;

        $l6 = $r22.<gc.hashcode.HashCodeSimpleTest.HashCodeSimpleTest$1: long counter>;

        $l7 = $l6 / 1000000L;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l7);

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" million hashcodes verified");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<nsk.share.log.Log: void info(java.lang.Object)>($r13);

     label4:
        return;
    }
}
