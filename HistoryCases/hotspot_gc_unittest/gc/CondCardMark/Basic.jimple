public class Basic extends java.lang.Object
{
    static volatile gc.CondCardMark.Basic$MyObject sink;

    public void <init>()
    {
        Basic r0;

        r0 := @this: Basic;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        gc.CondCardMark.Basic$MyObject $r0, $r1;
        java.lang.IllegalStateException $r2;
        int $i0, i1;
        java.lang.String[] r3;

        r3 := @parameter0: java.lang.String[];

        i1 = 0;

        goto label2;

     label1:
        $r0 = new gc.CondCardMark.Basic$MyObject;

        specialinvoke $r0.<gc.CondCardMark.Basic$MyObject: void <init>()>();

        $r0.<gc.CondCardMark.Basic$MyObject: int x> = i1;

        staticinvoke <gc.CondCardMark.Basic: void doStore(gc.CondCardMark.Basic$MyObject)>($r0);

        i1 = i1 + 1;

     label2:
        if i1 < 10000000 goto label1;

        $r1 = <gc.CondCardMark.Basic: gc.CondCardMark.Basic$MyObject sink>;

        $i0 = $r1.<gc.CondCardMark.Basic$MyObject: int x>;

        if $i0 == 9999999 goto label3;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed");

        throw $r2;

     label3:
        return;
    }

    public static void doStore(gc.CondCardMark.Basic$MyObject)
    {
        gc.CondCardMark.Basic$MyObject r0;

        r0 := @parameter0: gc.CondCardMark.Basic$MyObject;

        <gc.CondCardMark.Basic: gc.CondCardMark.Basic$MyObject sink> = r0;

        return;
    }
}
