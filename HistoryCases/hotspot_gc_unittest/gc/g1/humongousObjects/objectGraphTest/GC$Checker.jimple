class GC$Checker extends java.lang.Object implements java.util.function.Consumer
{
    final java.util.function.Consumer weakHumongousCheck;
    final java.util.function.Consumer softHumongousCheck;
    final java.util.function.Consumer weakSimpleCheck;
    final java.util.function.Consumer softSimpleCheck;

    public void <init>(java.util.function.Consumer, java.util.function.Consumer, java.util.function.Consumer, java.util.function.Consumer)
    {
        GC$Checker r0;
        gc.g1.humongousObjects.objectGraphTest.GC$Checker $r5, $r6, $r7, $r8;
        java.util.function.Consumer r1, r2, r3, r4;

        r0 := @this: GC$Checker;

        r1 := @parameter0: java.util.function.Consumer;

        r2 := @parameter1: java.util.function.Consumer;

        r3 := @parameter2: java.util.function.Consumer;

        r4 := @parameter3: java.util.function.Consumer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r0;

        $r5.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: java.util.function.Consumer weakHumongousCheck> = r1;

        $r6 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r0;

        $r6.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: java.util.function.Consumer softHumongousCheck> = r2;

        $r7 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r0;

        $r7.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: java.util.function.Consumer weakSimpleCheck> = r3;

        $r8 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r0;

        $r8.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: java.util.function.Consumer softSimpleCheck> = r4;

        return;
    }

    public void accept(gc.g1.humongousObjects.objectGraphTest.ReferenceInfo)
    {
        gc.g1.humongousObjects.objectGraphTest.GC$Checker $r17, $r18, $r19, $r20;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.io.PrintStream $r1, $r7, $r10, $r12, $r14;
        GC$Checker r8;
        gc.g1.humongousObjects.objectGraphTest.ReferenceInfo r2;
        java.lang.ref.Reference $r3;
        java.util.function.Consumer $r9, $r11, $r13, $r15;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r16;

        r8 := @this: GC$Checker;

        r2 := @parameter0: gc.g1.humongousObjects.objectGraphTest.ReferenceInfo;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("reference.get() returned ");

        $r3 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: java.lang.ref.Reference reference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $z0 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: boolean effectiveHumongous>;

        if $z0 == 0 goto label1;

        $z4 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: boolean softlyReachable>;

        if $z4 == 0 goto label1;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("soft and humongous");

        $r17 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r8;

        $r15 = $r17.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: java.util.function.Consumer softHumongousCheck>;

        interfaceinvoke $r15.<java.util.function.Consumer: void accept(java.lang.Object)>(r2);

     label1:
        $z5 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: boolean effectiveHumongous>;

        if $z5 == 0 goto label2;

        $z3 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: boolean softlyReachable>;

        if $z3 != 0 goto label2;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("weak and humongous");

        $r18 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r8;

        $r13 = $r18.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: java.util.function.Consumer weakHumongousCheck>;

        interfaceinvoke $r13.<java.util.function.Consumer: void accept(java.lang.Object)>(r2);

     label2:
        $z6 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: boolean effectiveHumongous>;

        if $z6 != 0 goto label3;

        $z2 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: boolean softlyReachable>;

        if $z2 == 0 goto label3;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("soft and non-humongous");

        $r19 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r8;

        $r11 = $r19.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: java.util.function.Consumer softSimpleCheck>;

        interfaceinvoke $r11.<java.util.function.Consumer: void accept(java.lang.Object)>(r2);

     label3:
        $z7 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: boolean effectiveHumongous>;

        if $z7 != 0 goto label4;

        $z1 = r2.<gc.g1.humongousObjects.objectGraphTest.ReferenceInfo: boolean softlyReachable>;

        if $z1 != 0 goto label4;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("weak and non-humongous");

        $r20 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r8;

        $r9 = $r20.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: java.util.function.Consumer weakSimpleCheck>;

        interfaceinvoke $r9.<java.util.function.Consumer: void accept(java.lang.Object)>(r2);

     label4:
        return;
    }

    public volatile void accept(java.lang.Object)
    {
        GC$Checker r0;
        java.lang.Object r1;
        gc.g1.humongousObjects.objectGraphTest.GC$Checker $r3;
        gc.g1.humongousObjects.objectGraphTest.ReferenceInfo $r2;

        r0 := @this: GC$Checker;

        r1 := @parameter0: java.lang.Object;

        $r2 = (gc.g1.humongousObjects.objectGraphTest.ReferenceInfo) r1;

        $r3 = (gc.g1.humongousObjects.objectGraphTest.GC$Checker) r0;

        virtualinvoke $r3.<gc.g1.humongousObjects.objectGraphTest.GC$Checker: void accept(gc.g1.humongousObjects.objectGraphTest.ReferenceInfo)>($r2);

        return;
    }
}
