public final enum class ObjectGraph$ReferenceType extends java.lang.Enum
{
    public static final enum gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType NONE;
    public static final enum gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType WEAK;
    public static final enum gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType SOFT;
    public static final enum gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType STRONG;
    private static final gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType[] ENUM$VALUES;

    static void <clinit>()
    {
        gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType[] $r4;

        $r0 = new gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType;

        specialinvoke $r0.<gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: void <init>(java.lang.String,int)>("NONE", 0);

        <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType NONE> = $r0;

        $r1 = new gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType;

        specialinvoke $r1.<gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: void <init>(java.lang.String,int)>("WEAK", 1);

        <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType WEAK> = $r1;

        $r2 = new gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType;

        specialinvoke $r2.<gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: void <init>(java.lang.String,int)>("SOFT", 2);

        <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType SOFT> = $r2;

        $r3 = new gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType;

        specialinvoke $r3.<gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: void <init>(java.lang.String,int)>("STRONG", 3);

        <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType STRONG> = $r3;

        $r4 = newarray (gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType)[4];

        $r5 = <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType NONE>;

        $r4[0] = $r5;

        $r6 = <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType WEAK>;

        $r4[1] = $r6;

        $r7 = <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType SOFT>;

        $r4[2] = $r7;

        $r8 = <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType STRONG>;

        $r4[3] = $r8;

        <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType[] ENUM$VALUES> = $r4;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        ObjectGraph$ReferenceType r0;

        r0 := @this: ObjectGraph$ReferenceType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType[] values()
    {
        gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType[] $r0, $r1;
        int $i0;

        $r0 = <gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType: gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType[] ENUM$VALUES>;

        $i0 = lengthof $r0;

        $r1 = newarray (gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0);

        return $r1;
    }

    public static gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lgc/g1/humongousObjects/objectGraphTest/ObjectGraph$ReferenceType;", r0);

        $r2 = (gc.g1.humongousObjects.objectGraphTest.ObjectGraph$ReferenceType) $r1;

        return $r2;
    }
}
