public class Test2GbHeap extends java.lang.Object
{

    public void <init>()
    {
        Test2GbHeap r0;

        r0 := @this: Test2GbHeap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.Object[] $r2;
        java.lang.Process $r6;
        java.lang.String[] $r1, $r3, r7;
        jdk.test.lib.process.OutputAnalyzer $r5;
        java.util.ArrayList $r0;
        java.lang.ProcessBuilder $r4;

        r7 := @parameter0: java.lang.String[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>("-XX:+UseG1GC");

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>("-Xmx2g");

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>("-version");

        $r1 = newarray (java.lang.String)[0];

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r3 = (java.lang.String[]) $r2;

        $r4 = staticinvoke <jdk.test.lib.process.ProcessTools: java.lang.ProcessBuilder createJavaProcessBuilder(java.lang.String[])>($r3);

        $r5 = new jdk.test.lib.process.OutputAnalyzer;

        $r6 = virtualinvoke $r4.<java.lang.ProcessBuilder: java.lang.Process start()>();

        specialinvoke $r5.<jdk.test.lib.process.OutputAnalyzer: void <init>(java.lang.Process)>($r6);

        virtualinvoke $r5.<jdk.test.lib.process.OutputAnalyzer: jdk.test.lib.process.OutputAnalyzer shouldHaveExitValue(int)>(0);

        return;
    }
}
