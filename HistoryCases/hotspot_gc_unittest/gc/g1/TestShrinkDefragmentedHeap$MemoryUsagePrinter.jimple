class TestShrinkDefragmentedHeap$MemoryUsagePrinter extends java.lang.Object
{
    public static final java.text.NumberFormat NF;

    static void <clinit>()
    {
        java.text.NumberFormat $r0;

        $r0 = staticinvoke <gc.testlibrary.Helpers: java.text.NumberFormat numberFormatter()>();

        <gc.g1.TestShrinkDefragmentedHeap$MemoryUsagePrinter: java.text.NumberFormat NF> = $r0;

        return;
    }

    void <init>()
    {
        TestShrinkDefragmentedHeap$MemoryUsagePrinter r0;

        r0 := @this: TestShrinkDefragmentedHeap$MemoryUsagePrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void printMemoryUsage(java.lang.String)
    {
        java.lang.Float $r11;
        java.lang.Object[] $r2;
        long $l0, $l1, $l2, $l3, $l4;
        java.text.NumberFormat $r5, $r7, $r9;
        java.lang.management.MemoryMXBean $r0;
        java.lang.String r3, $r6, $r8, $r10;
        java.lang.management.MemoryUsage $r1;
        java.io.PrintStream $r4;
        float $f0, $f1, $f2, f3, $f4;

        r3 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.MemoryMXBean getMemoryMXBean()>();

        $r1 = interfaceinvoke $r0.<java.lang.management.MemoryMXBean: java.lang.management.MemoryUsage getHeapMemoryUsage()>();

        $l0 = virtualinvoke $r1.<java.lang.management.MemoryUsage: long getUsed()>();

        $f0 = (float) $l0;

        $l1 = virtualinvoke $r1.<java.lang.management.MemoryUsage: long getCommitted()>();

        $f1 = (float) $l1;

        $f2 = $f0 / $f1;

        f3 = 1.0F - $f2;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[5];

        $r2[0] = r3;

        $r5 = <gc.g1.TestShrinkDefragmentedHeap$MemoryUsagePrinter: java.text.NumberFormat NF>;

        $l2 = virtualinvoke $r1.<java.lang.management.MemoryUsage: long getInit()>();

        $r6 = virtualinvoke $r5.<java.text.NumberFormat: java.lang.String format(long)>($l2);

        $r2[1] = $r6;

        $r7 = <gc.g1.TestShrinkDefragmentedHeap$MemoryUsagePrinter: java.text.NumberFormat NF>;

        $l3 = virtualinvoke $r1.<java.lang.management.MemoryUsage: long getUsed()>();

        $r8 = virtualinvoke $r7.<java.text.NumberFormat: java.lang.String format(long)>($l3);

        $r2[2] = $r8;

        $r9 = <gc.g1.TestShrinkDefragmentedHeap$MemoryUsagePrinter: java.text.NumberFormat NF>;

        $l4 = virtualinvoke $r1.<java.lang.management.MemoryUsage: long getCommitted()>();

        $r10 = virtualinvoke $r9.<java.text.NumberFormat: java.lang.String format(long)>($l4);

        $r2[3] = $r10;

        $f4 = f3 * 100.0F;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r2[4] = $r11;

        virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>("[%-24s] init: %-7s, used: %-7s, comm: %-7s, freeRatio ~= %.1f%%%n", $r2);

        return;
    }
}
