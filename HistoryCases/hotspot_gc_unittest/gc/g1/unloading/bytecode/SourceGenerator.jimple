public class SourceGenerator extends java.lang.Object
{
    private static final int METHODS_NUMBER_LIMIT;
    private static final int LOCALS_NUMBER_LIMIT;
    private static final int METHOD_ARGS_NUMBER_LIMIT;
    private static final int FIELDS_NUMBER_LIMIT;
    private java.util.Random rnd;
    private static java.util.concurrent.atomic.AtomicLong atomicLong;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicLong $r0;

        $r0 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        <gc.g1.unloading.bytecode.SourceGenerator: java.util.concurrent.atomic.AtomicLong atomicLong> = $r0;

        return;
    }

    public void <init>(long)
    {
        gc.g1.unloading.bytecode.SourceGenerator $r3;
        SourceGenerator r0;
        long l0;
        java.util.Random $r2;

        r0 := @this: SourceGenerator;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(l0);

        $r3 = (gc.g1.unloading.bytecode.SourceGenerator) r0;

        $r3.<gc.g1.unloading.bytecode.SourceGenerator: java.util.Random rnd> = $r2;

        return;
    }

    public java.lang.CharSequence generateSource(java.lang.String)
    {
        java.lang.CharSequence $r2;
        gc.g1.unloading.bytecode.SourceGenerator $r3;
        SourceGenerator r0;
        java.lang.String r1;

        r0 := @this: SourceGenerator;

        r1 := @parameter0: java.lang.String;

        $r3 = (gc.g1.unloading.bytecode.SourceGenerator) r0;

        $r2 = virtualinvoke $r3.<gc.g1.unloading.bytecode.SourceGenerator: java.lang.CharSequence generateSource(java.lang.String,java.lang.CharSequence)>(r1, null);

        return $r2;
    }

    public java.lang.CharSequence generateSource(java.lang.String, java.lang.CharSequence)
    {
        gc.g1.unloading.bytecode.SourceGenerator $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        java.util.Random $r8, $r9, $r11, $r12, $r14;
        int $i0, $i1, i2, i3;
        SourceGenerator r7;
        java.lang.String r2, $r5;
        java.util.LinkedList $r21;
        boolean $z0;
        java.lang.CharSequence $r10, $r13, r17, r18;
        java.util.Iterator $r15;
        java.lang.StringBuilder $r3, $r4, $r19, $r20;
        java.lang.Object $r16;

        r7 := @this: SourceGenerator;

        r2 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.CharSequence;

        $r20 = new java.lang.StringBuilder;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("public class ");

        $r3 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" { ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r21 = new java.util.LinkedList;

        specialinvoke $r21.<java.util.LinkedList: void <init>()>();

        $r22 = (gc.g1.unloading.bytecode.SourceGenerator) r7;

        $r8 = $r22.<gc.g1.unloading.bytecode.SourceGenerator: java.util.Random rnd>;

        $i0 = virtualinvoke $r8.<java.util.Random: int nextInt(int)>(200);

        i2 = 0;

        goto label2;

     label1:
        $r23 = (gc.g1.unloading.bytecode.SourceGenerator) r7;

        $r9 = $r23.<gc.g1.unloading.bytecode.SourceGenerator: java.util.Random rnd>;

        $r24 = (gc.g1.unloading.bytecode.SourceGenerator) r7;

        $r10 = virtualinvoke $r24.<gc.g1.unloading.bytecode.SourceGenerator: java.lang.CharSequence createField(java.util.Random)>($r9);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r10);

        i2 = i2 + 1;

     label2:
        if i2 < $i0 goto label1;

        $r25 = (gc.g1.unloading.bytecode.SourceGenerator) r7;

        $r11 = $r25.<gc.g1.unloading.bytecode.SourceGenerator: java.util.Random rnd>;

        $i1 = virtualinvoke $r11.<java.util.Random: int nextInt(int)>(100);

        i3 = 0;

        goto label4;

     label3:
        $r26 = (gc.g1.unloading.bytecode.SourceGenerator) r7;

        $r12 = $r26.<gc.g1.unloading.bytecode.SourceGenerator: java.util.Random rnd>;

        $r27 = (gc.g1.unloading.bytecode.SourceGenerator) r7;

        $r13 = virtualinvoke $r27.<gc.g1.unloading.bytecode.SourceGenerator: java.lang.CharSequence createMethod(java.util.Random)>($r12);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r13);

        i3 = i3 + 1;

     label4:
        if i3 < $i1 goto label3;

        $r28 = (gc.g1.unloading.bytecode.SourceGenerator) r7;

        $r14 = $r28.<gc.g1.unloading.bytecode.SourceGenerator: java.util.Random rnd>;

        staticinvoke <java.util.Collections: void shuffle(java.util.List,java.util.Random)>($r21, $r14);

        $r15 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label5:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.CharSequence) $r16;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r18);

     label6:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

        if r17 == null goto label7;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r17);

     label7:
        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" } ");

        return $r20;
    }

    private java.lang.CharSequence createField(java.util.Random)
    {
        java.util.Random r1;
        long $l0;
        gc.g1.unloading.bytecode.AccessModifier $r7;
        SourceGenerator r6;
        java.lang.String $r3, $r5, $r8, $r10, $r14, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.util.concurrent.atomic.AtomicLong $r12;
        java.lang.StringBuilder $r0, $r2, $r4, $r11, $r13;
        gc.g1.unloading.bytecode.Type $r9;

        r6 := @this: SourceGenerator;

        r1 := @parameter0: java.util.Random;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" static ");

     label1:
        $z1 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" final ");

     label2:
        $z2 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        if $z2 == 0 goto label3;

        if $z1 != 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" volatile ");

     label3:
        $r7 = staticinvoke <gc.g1.unloading.bytecode.AccessModifier: gc.g1.unloading.bytecode.AccessModifier getRandomAccessModifier(java.util.Random)>(r1);

        $r8 = virtualinvoke $r7.<gc.g1.unloading.bytecode.AccessModifier: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = staticinvoke <gc.g1.unloading.bytecode.Type: gc.g1.unloading.bytecode.Type getRandomType(java.util.Random)>(r1);

        $r10 = virtualinvoke $r9.<gc.g1.unloading.bytecode.Type: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(" field_");

        $r12 = <gc.g1.unloading.bytecode.SourceGenerator: java.util.concurrent.atomic.AtomicLong atomicLong>;

        $l0 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $z3 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        if $z3 != 0 goto label4;

        if $z1 == 0 goto label5;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(" = ");

        $r3 = virtualinvoke $r9.<gc.g1.unloading.bytecode.Type: java.lang.String init(java.util.Random)>(r1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label5:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r15 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    private java.lang.CharSequence createMethod(java.util.Random)
    {
        gc.g1.unloading.bytecode.SourceGenerator $r21, $r22;
        java.util.Random r1;
        long $l0;
        gc.g1.unloading.bytecode.AccessModifier $r2;
        SourceGenerator r10;
        java.lang.String $r3, $r5, $r9, $r14, $r16, $r17;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r11, $r12;
        java.util.concurrent.atomic.AtomicLong $r7;
        java.lang.StringBuilder $r8, $r15, $r18, $r19, $r20;
        gc.g1.unloading.bytecode.Type $r4;

        r10 := @this: SourceGenerator;

        r1 := @parameter0: java.util.Random;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" static ");

     label1:
        $z1 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" final ");

     label2:
        $z2 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        if $z2 == 0 goto label3;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" synchronized ");

     label3:
        $r2 = staticinvoke <gc.g1.unloading.bytecode.AccessModifier: gc.g1.unloading.bytecode.AccessModifier getRandomAccessModifier(java.util.Random)>(r1);

        $r3 = virtualinvoke $r2.<gc.g1.unloading.bytecode.AccessModifier: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = staticinvoke <gc.g1.unloading.bytecode.Type: gc.g1.unloading.bytecode.Type getRandomType(java.util.Random)>(r1);

        $r5 = virtualinvoke $r4.<gc.g1.unloading.bytecode.Type: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>(" method_");

        $r7 = <gc.g1.unloading.bytecode.SourceGenerator: java.util.concurrent.atomic.AtomicLong atomicLong>;

        $l0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        $r8 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r21 = (gc.g1.unloading.bytecode.SourceGenerator) r10;

        $r11 = virtualinvoke $r21.<gc.g1.unloading.bytecode.SourceGenerator: java.lang.CharSequence generateMethodArgs(java.util.Random)>(r1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r11);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") {\n");

        $r22 = (gc.g1.unloading.bytecode.SourceGenerator) r10;

        $r12 = virtualinvoke $r22.<gc.g1.unloading.bytecode.SourceGenerator: java.lang.CharSequence generateMethodContent(java.util.Random)>(r1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r12);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(" return ");

        $r14 = virtualinvoke $r4.<gc.g1.unloading.bytecode.Type: java.lang.String init(java.util.Random)>(r1);

        $r15 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; };\n");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    private java.lang.CharSequence generateMethodContent(java.util.Random)
    {
        java.util.Random r1;
        int $i0, i1;
        SourceGenerator r19;
        java.lang.String $r6, $r9, $r13, $r15, $r17, $r18;
        boolean $z0;
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r14, $r16;
        gc.g1.unloading.bytecode.Type $r2;

        r19 := @this: SourceGenerator;

        r1 := @parameter0: java.util.Random;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(50);

        i1 = 0;

        goto label4;

     label1:
        $r2 = staticinvoke <gc.g1.unloading.bytecode.Type: gc.g1.unloading.bytecode.Type getRandomType(java.util.Random)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(" local_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $z0 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        if $z0 == 0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(" = ");

        $r15 = virtualinvoke $r2.<gc.g1.unloading.bytecode.Type: java.lang.String init(java.util.Random)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        if $z0 == 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("System.out.println(\" \" + ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < $i0 goto label1;

        $r18 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    private java.lang.CharSequence generateMethodArgs(java.util.Random)
    {
        java.util.Random r1;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r0, $r3, $r4;
        SourceGenerator r7;
        java.lang.String $r5, $r6;
        gc.g1.unloading.bytecode.Type $r2;

        r7 := @this: SourceGenerator;

        r1 := @parameter0: java.util.Random;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(15);

        i2 = 0;

        goto label3;

     label1:
        $r2 = staticinvoke <gc.g1.unloading.bytecode.Type: gc.g1.unloading.bytecode.Type getRandomType(java.util.Random)>(r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(" arg_");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i1 = $i0 - 1;

        if i2 >= $i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < $i0 goto label1;

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
