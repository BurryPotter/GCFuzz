public class TestConfiguration extends java.lang.Object
{
    private gc.g1.unloading.configuration.ReleaseRefMode releaseRefMode;
    private gc.g1.unloading.configuration.WhatToKeep whatToKeep;
    private gc.g1.unloading.configuration.ClassloadingMethod classloadingMethod;
    private gc.g1.unloading.configuration.KeepRefMode keepRefMode;
    private boolean humongousClass;
    private int compilationLevel;
    private int compilationNumber;
    private boolean redefineClasses;
    private boolean inMemoryCompilation;
    private int numberOfGCsBeforeCheck;
    private int numberOfChecksLimit;

    public void <init>()
    {
        gc.g1.unloading.configuration.ReleaseRefMode $r1;
        gc.g1.unloading.configuration.TestConfiguration $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        TestConfiguration r0;
        gc.g1.unloading.configuration.WhatToKeep $r2;
        gc.g1.unloading.configuration.ClassloadingMethod $r3;
        gc.g1.unloading.configuration.KeepRefMode $r4;
        int $i1;

        r0 := @this: TestConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <gc.g1.unloading.configuration.ReleaseRefMode: gc.g1.unloading.configuration.ReleaseRefMode NONE>;

        $r5 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r5.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.ReleaseRefMode releaseRefMode> = $r1;

        $r2 = <gc.g1.unloading.configuration.WhatToKeep: gc.g1.unloading.configuration.WhatToKeep CLASS>;

        $r6 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r6.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.WhatToKeep whatToKeep> = $r2;

        $r3 = <gc.g1.unloading.configuration.ClassloadingMethod: gc.g1.unloading.configuration.ClassloadingMethod REFLECTION>;

        $r7 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r7.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.ClassloadingMethod classloadingMethod> = $r3;

        $r4 = <gc.g1.unloading.configuration.KeepRefMode: gc.g1.unloading.configuration.KeepRefMode STRONG_REFERENCE>;

        $r8 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r8.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.KeepRefMode keepRefMode> = $r4;

        $r9 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r9.<gc.g1.unloading.configuration.TestConfiguration: boolean humongousClass> = 0;

        $r10 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r10.<gc.g1.unloading.configuration.TestConfiguration: int compilationLevel> = 0;

        $r11 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r11.<gc.g1.unloading.configuration.TestConfiguration: int compilationNumber> = 2;

        $r12 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r12.<gc.g1.unloading.configuration.TestConfiguration: boolean redefineClasses> = 0;

        $r13 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r13.<gc.g1.unloading.configuration.TestConfiguration: boolean inMemoryCompilation> = 0;

        $r14 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r14.<gc.g1.unloading.configuration.TestConfiguration: int numberOfGCsBeforeCheck> = 50;

        $r15 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $i1 = (int) -1;

        $r15.<gc.g1.unloading.configuration.TestConfiguration: int numberOfChecksLimit> = $i1;

        return;
    }

    public gc.g1.unloading.configuration.ReleaseRefMode getReleaseRefMode()
    {
        TestConfiguration r0;
        gc.g1.unloading.configuration.ReleaseRefMode $r1;
        gc.g1.unloading.configuration.TestConfiguration $r2;

        r0 := @this: TestConfiguration;

        $r2 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r1 = $r2.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.ReleaseRefMode releaseRefMode>;

        return $r1;
    }

    public gc.g1.unloading.configuration.WhatToKeep getWhatToKeep()
    {
        TestConfiguration r0;
        gc.g1.unloading.configuration.WhatToKeep $r1;
        gc.g1.unloading.configuration.TestConfiguration $r2;

        r0 := @this: TestConfiguration;

        $r2 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r1 = $r2.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.WhatToKeep whatToKeep>;

        return $r1;
    }

    public gc.g1.unloading.configuration.ClassloadingMethod getClassloadingMethod()
    {
        TestConfiguration r0;
        gc.g1.unloading.configuration.TestConfiguration $r2;
        gc.g1.unloading.configuration.ClassloadingMethod $r1;

        r0 := @this: TestConfiguration;

        $r2 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r1 = $r2.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.ClassloadingMethod classloadingMethod>;

        return $r1;
    }

    public gc.g1.unloading.configuration.KeepRefMode getKeepRefMode()
    {
        TestConfiguration r0;
        gc.g1.unloading.configuration.TestConfiguration $r2;
        gc.g1.unloading.configuration.KeepRefMode $r1;

        r0 := @this: TestConfiguration;

        $r2 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $r1 = $r2.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.KeepRefMode keepRefMode>;

        return $r1;
    }

    public boolean isHumongousClass()
    {
        TestConfiguration r0;
        gc.g1.unloading.configuration.TestConfiguration $r1;
        boolean $z0;

        r0 := @this: TestConfiguration;

        $r1 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $z0 = $r1.<gc.g1.unloading.configuration.TestConfiguration: boolean humongousClass>;

        return $z0;
    }

    public int getCompilationLevel()
    {
        TestConfiguration r0;
        int $i0;
        gc.g1.unloading.configuration.TestConfiguration $r1;

        r0 := @this: TestConfiguration;

        $r1 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $i0 = $r1.<gc.g1.unloading.configuration.TestConfiguration: int compilationLevel>;

        return $i0;
    }

    public int getCompilationNumber()
    {
        TestConfiguration r0;
        int $i0;
        gc.g1.unloading.configuration.TestConfiguration $r1;

        r0 := @this: TestConfiguration;

        $r1 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $i0 = $r1.<gc.g1.unloading.configuration.TestConfiguration: int compilationNumber>;

        return $i0;
    }

    public boolean isRedefineClasses()
    {
        TestConfiguration r0;
        gc.g1.unloading.configuration.TestConfiguration $r1;
        boolean $z0;

        r0 := @this: TestConfiguration;

        $r1 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $z0 = $r1.<gc.g1.unloading.configuration.TestConfiguration: boolean redefineClasses>;

        return $z0;
    }

    public boolean isInMemoryCompilation()
    {
        TestConfiguration r0;
        gc.g1.unloading.configuration.TestConfiguration $r1;
        boolean $z0;

        r0 := @this: TestConfiguration;

        $r1 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $z0 = $r1.<gc.g1.unloading.configuration.TestConfiguration: boolean inMemoryCompilation>;

        return $z0;
    }

    public int getNumberOfGCsBeforeCheck()
    {
        TestConfiguration r0;
        int $i0;
        gc.g1.unloading.configuration.TestConfiguration $r1;

        r0 := @this: TestConfiguration;

        $r1 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $i0 = $r1.<gc.g1.unloading.configuration.TestConfiguration: int numberOfGCsBeforeCheck>;

        return $i0;
    }

    public int getNumberOfChecksLimit()
    {
        TestConfiguration r0;
        int $i0;
        gc.g1.unloading.configuration.TestConfiguration $r1;

        r0 := @this: TestConfiguration;

        $r1 = (gc.g1.unloading.configuration.TestConfiguration) r0;

        $i0 = $r1.<gc.g1.unloading.configuration.TestConfiguration: int numberOfChecksLimit>;

        return $i0;
    }

    public static gc.g1.unloading.configuration.TestConfiguration createTestConfiguration(java.lang.String[])
    {
        gc.g1.unloading.configuration.TestConfiguration $r0;
        java.lang.Integer $r41, $r43, $r56;
        java.lang.StringBuilder $r29, $r32, $r33, $r60, $r63, $r65, $r68, $r70, $r73, $r75, $r77, $r79, $r82, $r84, $r86, $r88, $r90, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106;
        gc.g1.unloading.configuration.WhatToKeep $r53, $r67;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20;
        java.io.PrintStream $r30, $r61, $r66, $r71, $r76, $r80, $r85, $r89, $r93, $r97, $r101, $r105;
        gc.g1.unloading.configuration.ClassloadingMethod $r50, $r72;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r31, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r44, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r55, $r57, $r58, $r64, $r69, $r74, $r78, $r83, $r87, $r91, $r95, $r99, $r103, $r107;
        gc.g1.unloading.configuration.ReleaseRefMode $r59, $r62;
        gc.g1.unloading.configuration.KeepRefMode $r47, $r81;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        $r0 = new gc.g1.unloading.configuration.TestConfiguration;

        specialinvoke $r0.<gc.g1.unloading.configuration.TestConfiguration: void <init>()>();

        i19 = 0;

        goto label14;

     label01:
        $r3 = "-referenceMode";

        $r2 = r1[i19];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label02;

        $i14 = i19 + 1;

        $r57 = r1[$i14];

        $r58 = virtualinvoke $r57.<java.lang.String: java.lang.String toUpperCase()>();

        $r59 = staticinvoke <gc.g1.unloading.configuration.ReleaseRefMode: gc.g1.unloading.configuration.ReleaseRefMode valueOf(java.lang.String)>($r58);

        $r0.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.ReleaseRefMode releaseRefMode> = $r59;

        goto label13;

     label02:
        $r5 = "-numberOfGCsBeforeCheck";

        $r4 = r1[i19];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z1 == 0 goto label03;

        $i12 = i19 + 1;

        $r54 = r1[$i12];

        $r55 = virtualinvoke $r54.<java.lang.String: java.lang.String toUpperCase()>();

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r55);

        $i13 = virtualinvoke $r56.<java.lang.Integer: int intValue()>();

        $r0.<gc.g1.unloading.configuration.TestConfiguration: int numberOfGCsBeforeCheck> = $i13;

        goto label13;

     label03:
        $r7 = "-keep";

        $r6 = r1[i19];

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z2 == 0 goto label04;

        $i11 = i19 + 1;

        $r51 = r1[$i11];

        $r52 = virtualinvoke $r51.<java.lang.String: java.lang.String toUpperCase()>();

        $r53 = staticinvoke <gc.g1.unloading.configuration.WhatToKeep: gc.g1.unloading.configuration.WhatToKeep valueOf(java.lang.String)>($r52);

        $r0.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.WhatToKeep whatToKeep> = $r53;

        goto label13;

     label04:
        $r9 = "-classloadingMethod";

        $r8 = r1[i19];

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z3 == 0 goto label05;

        $i10 = i19 + 1;

        $r48 = r1[$i10];

        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String toUpperCase()>();

        $r50 = staticinvoke <gc.g1.unloading.configuration.ClassloadingMethod: gc.g1.unloading.configuration.ClassloadingMethod valueOf(java.lang.String)>($r49);

        $r0.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.ClassloadingMethod classloadingMethod> = $r50;

        goto label13;

     label05:
        $r11 = "-keepRefMode";

        $r10 = r1[i19];

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if $z4 == 0 goto label06;

        $i9 = i19 + 1;

        $r46 = r1[$i9];

        $r47 = staticinvoke <gc.g1.unloading.configuration.KeepRefMode: gc.g1.unloading.configuration.KeepRefMode valueOf(java.lang.String)>($r46);

        $r0.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.KeepRefMode keepRefMode> = $r47;

        goto label13;

     label06:
        $r13 = "-humongousClass";

        $r12 = r1[i19];

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);

        if $z5 == 0 goto label07;

        $r45 = "true";

        $i8 = i19 + 1;

        $r44 = r1[$i8];

        $z16 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r44);

        $r0.<gc.g1.unloading.configuration.TestConfiguration: boolean humongousClass> = $z16;

        goto label13;

     label07:
        $r15 = "-compilationLevel";

        $r14 = r1[i19];

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14);

        if $z6 == 0 goto label08;

        $i6 = i19 + 1;

        $r42 = r1[$i6];

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r42);

        $i7 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        $r0.<gc.g1.unloading.configuration.TestConfiguration: int compilationLevel> = $i7;

        goto label13;

     label08:
        $r17 = "-compilationNumber";

        $r16 = r1[i19];

        $z7 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r16);

        if $z7 == 0 goto label09;

        $i4 = i19 + 1;

        $r40 = r1[$i4];

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r40);

        $i5 = virtualinvoke $r41.<java.lang.Integer: int intValue()>();

        $r0.<gc.g1.unloading.configuration.TestConfiguration: int compilationNumber> = $i5;

        goto label13;

     label09:
        $r19 = "-redefineClasses";

        $r18 = r1[i19];

        $z8 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r18);

        if $z8 == 0 goto label10;

        $r39 = "true";

        $i3 = i19 + 1;

        $r38 = r1[$i3];

        $z15 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        $r0.<gc.g1.unloading.configuration.TestConfiguration: boolean redefineClasses> = $z15;

        goto label13;

     label10:
        $r21 = "-inMemoryCompilation";

        $r20 = r1[i19];

        $z9 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r20);

        if $z9 == 0 goto label11;

        $r37 = "true";

        $i2 = i19 + 1;

        $r36 = r1[$i2];

        $z14 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        $r0.<gc.g1.unloading.configuration.TestConfiguration: boolean inMemoryCompilation> = $z14;

        goto label13;

     label11:
        $r23 = "-numberOfChecksLimit";

        $r22 = r1[i19];

        $z10 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r22);

        if $z10 == 0 goto label12;

        $i0 = i19 + 1;

        $r35 = r1[$i0];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r35);

        $r0.<gc.g1.unloading.configuration.TestConfiguration: int numberOfChecksLimit> = $i1;

        goto label13;

     label12:
        $r24 = r1[i19];

        $z11 = virtualinvoke $r24.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z11 == 0 goto label13;

        $r26 = "-stressTime";

        $r25 = r1[i19];

        $z12 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z12 != 0 goto label13;

        $r27 = r1[i19];

        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String toLowerCase()>();

        $z13 = virtualinvoke $r28.<java.lang.String: boolean contains(java.lang.CharSequence)>("seed");

        if $z13 != 0 goto label13;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("\n\nWarning!! Unrecognized option ");

        $r31 = r1[i19];

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r34);

     label13:
        i19 = i19 + 1;

     label14:
        $i20 = lengthof r1;

        if i19 < $i20 goto label01;

        $r61 = <java.lang.System: java.io.PrintStream out>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>("releaseRefMode = ");

        $r62 = $r0.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.ReleaseRefMode releaseRefMode>;

        $r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r64);

        $r66 = <java.lang.System: java.io.PrintStream out>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>(java.lang.String)>("whatToKeep = ");

        $r67 = $r0.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.WhatToKeep whatToKeep>;

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>($r69);

        $r71 = <java.lang.System: java.io.PrintStream out>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>(java.lang.String)>("classlodingMethod = ");

        $r72 = $r0.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.ClassloadingMethod classloadingMethod>;

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r71.<java.io.PrintStream: void println(java.lang.String)>($r74);

        $r76 = <java.lang.System: java.io.PrintStream out>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>(java.lang.String)>("numberOfGCsBeforeCheck = ");

        $i15 = $r0.<gc.g1.unloading.configuration.TestConfiguration: int numberOfGCsBeforeCheck>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>($r78);

        $r80 = <java.lang.System: java.io.PrintStream out>;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>(java.lang.String)>("keepRefMode = ");

        $r81 = $r0.<gc.g1.unloading.configuration.TestConfiguration: gc.g1.unloading.configuration.KeepRefMode keepRefMode>;

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>($r83);

        $r85 = <java.lang.System: java.io.PrintStream out>;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>(java.lang.String)>("humongousClass = ");

        $z17 = $r0.<gc.g1.unloading.configuration.TestConfiguration: boolean humongousClass>;

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z17);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r87);

        $r89 = <java.lang.System: java.io.PrintStream out>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>(java.lang.String)>("compilationLevel = ");

        $i16 = $r0.<gc.g1.unloading.configuration.TestConfiguration: int compilationLevel>;

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>($r91);

        $r93 = <java.lang.System: java.io.PrintStream out>;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>(java.lang.String)>("compilationNumber = ");

        $i17 = $r0.<gc.g1.unloading.configuration.TestConfiguration: int compilationNumber>;

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r95);

        $r97 = <java.lang.System: java.io.PrintStream out>;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>(java.lang.String)>("redefineClasses = ");

        $z18 = $r0.<gc.g1.unloading.configuration.TestConfiguration: boolean redefineClasses>;

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r97.<java.io.PrintStream: void println(java.lang.String)>($r99);

        $r101 = <java.lang.System: java.io.PrintStream out>;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>(java.lang.String)>("inMemoryCompilation = ");

        $z19 = $r0.<gc.g1.unloading.configuration.TestConfiguration: boolean inMemoryCompilation>;

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z19);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r103);

        $r105 = <java.lang.System: java.io.PrintStream out>;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>(java.lang.String)>("numberOfChecksLimit = ");

        $i18 = $r0.<gc.g1.unloading.configuration.TestConfiguration: int numberOfChecksLimit>;

        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r105.<java.io.PrintStream: void println(java.lang.String)>($r107);

        return $r0;
    }
}
