class TestHumongousAllocInitialMark$HumongousObjectAllocator extends java.lang.Object
{
    private static byte[] dummy;

    void <init>()
    {
        TestHumongousAllocInitialMark$HumongousObjectAllocator r0;

        r0 := @this: TestHumongousAllocInitialMark$HumongousObjectAllocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r1;
        byte[] $r9;
        java.lang.String[] r10;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r10 := @parameter0: java.lang.String[];

        i0 = 1;

        goto label2;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Allocating humongous object ");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(113);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of size ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(786432);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r9 = newarray (byte)[786432];

        <gc.g1.TestHumongousAllocInitialMark$HumongousObjectAllocator: byte[] dummy> = $r9;

        i0 = i0 + 1;

     label2:
        if i0 <= 113 goto label1;

        return;
    }
}
