public class TestObjectAlignment extends java.lang.Object
{
    public static byte[] garbage;

    public void <init>()
    {
        TestObjectAlignment r0;

        r0 := @this: TestObjectAlignment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean runsOn32bit()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.arch.data.model");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("32");

        return $z0;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        byte[] $r0;
        int i0;
        java.lang.String[] r1;
        boolean $z0;

        r1 := @parameter0: java.lang.String[];

        $z0 = staticinvoke <gc.TestObjectAlignment: boolean runsOn32bit()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        i0 = 0;

        goto label3;

     label2:
        $r0 = newarray (byte)[1000];

        <gc.TestObjectAlignment: byte[] garbage> = $r0;

        staticinvoke <java.lang.System: void gc()>();

        i0 = i0 + 1;

     label3:
        if i0 < 10 goto label2;

        return;
    }
}
