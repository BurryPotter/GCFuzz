public class AlignmentHelper extends java.lang.Object
{
    private static final sun.hotspot.WhiteBox WHITE_BOX;
    private static final long OBJECT_ALIGNMENT_IN_BYTES_FOR_32_VM;
    private static final float MAX_RELATIVE_DEVIATION;
    public static final long OBJECT_ALIGNMENT_IN_BYTES;
    public static final long SURVIVOR_ALIGNMENT_IN_BYTES;
    public static final long MIN_OBJECT_SIZE;
    public static final long MIN_ARRAY_SIZE;
    private final long memoryUsageMeasurementPrecision;
    private final long minObjectSizeInThisSpace;
    private final long objectAlignmentInThisRegion;
    private final java.lang.management.MemoryPoolMXBean poolMXBean;

    static void <clinit>()
    {
        byte[] $r15;
        long $l0, $l1, $l2, $l3;
        java.util.function.Supplier $r10;
        java.lang.Long $r2, $r4, $r6, $r8, $r12;
        sun.hotspot.WhiteBox $r0, $r1, $r7, $r14, $r16;
        java.util.Optional $r3, $r9;
        java.lang.Object $r5, $r11, $r13;

        $r0 = staticinvoke <sun.hotspot.WhiteBox: sun.hotspot.WhiteBox getWhiteBox()>();

        <gc.survivorAlignment.AlignmentHelper: sun.hotspot.WhiteBox WHITE_BOX> = $r0;

        $r1 = <gc.survivorAlignment.AlignmentHelper: sun.hotspot.WhiteBox WHITE_BOX>;

        $r2 = virtualinvoke $r1.<sun.hotspot.WhiteBox: java.lang.Long getIntxVMFlag(java.lang.String)>("ObjectAlignmentInBytes");

        $r3 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(8L);

        $r5 = virtualinvoke $r3.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r4);

        $r6 = (java.lang.Long) $r5;

        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        <gc.survivorAlignment.AlignmentHelper: long OBJECT_ALIGNMENT_IN_BYTES> = $l0;

        $r7 = <gc.survivorAlignment.AlignmentHelper: sun.hotspot.WhiteBox WHITE_BOX>;

        $r8 = virtualinvoke $r7.<sun.hotspot.WhiteBox: java.lang.Long getIntxVMFlag(java.lang.String)>("SurvivorAlignmentInBytes");

        $r9 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r8);

        $r10 = staticinvoke <AlignmentHelper$lambda_0__1: java.util.function.Supplier bootstrap$()>();

        $r11 = virtualinvoke $r9.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r10);

        $r12 = (java.lang.Long) $r11;

        $l1 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        <gc.survivorAlignment.AlignmentHelper: long SURVIVOR_ALIGNMENT_IN_BYTES> = $l1;

        $r14 = <gc.survivorAlignment.AlignmentHelper: sun.hotspot.WhiteBox WHITE_BOX>;

        $r13 = new java.lang.Object;

        specialinvoke $r13.<java.lang.Object: void <init>()>();

        $l2 = virtualinvoke $r14.<sun.hotspot.WhiteBox: long getObjectSize(java.lang.Object)>($r13);

        <gc.survivorAlignment.AlignmentHelper: long MIN_OBJECT_SIZE> = $l2;

        $r16 = <gc.survivorAlignment.AlignmentHelper: sun.hotspot.WhiteBox WHITE_BOX>;

        $r15 = newarray (byte)[0];

        $l3 = virtualinvoke $r16.<sun.hotspot.WhiteBox: long getObjectSize(java.lang.Object)>($r15);

        <gc.survivorAlignment.AlignmentHelper: long MIN_ARRAY_SIZE> = $l3;

        return;
    }

    private static long alignUp(long, long)
    {
        long l0, l1, $l2, $l3, $l4, $l5;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = l0 - 1L;

        $l3 = $l2 / l1;

        $l4 = $l3 + 1L;

        $l5 = $l4 * l1;

        return $l5;
    }

    protected void <init>(long, long, long, java.lang.management.MemoryPoolMXBean)
    {
        gc.survivorAlignment.AlignmentHelper $r2, $r3, $r4, $r5;
        AlignmentHelper r0;
        long l0, l1, l2;
        java.lang.management.MemoryPoolMXBean r1;

        r0 := @this: AlignmentHelper;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: java.lang.management.MemoryPoolMXBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = (gc.survivorAlignment.AlignmentHelper) r0;

        $r2.<gc.survivorAlignment.AlignmentHelper: long memoryUsageMeasurementPrecision> = l0;

        $r3 = (gc.survivorAlignment.AlignmentHelper) r0;

        $r3.<gc.survivorAlignment.AlignmentHelper: long minObjectSizeInThisSpace> = l1;

        $r4 = (gc.survivorAlignment.AlignmentHelper) r0;

        $r4.<gc.survivorAlignment.AlignmentHelper: long objectAlignmentInThisRegion> = l2;

        $r5 = (gc.survivorAlignment.AlignmentHelper) r0;

        $r5.<gc.survivorAlignment.AlignmentHelper: java.lang.management.MemoryPoolMXBean poolMXBean> = r1;

        return;
    }

    public int getObjectsCount(long, long)
    {
        gc.survivorAlignment.AlignmentHelper $r1;
        int $i4;
        long l0, l1, $l2, $l3;
        AlignmentHelper r0;

        r0 := @this: AlignmentHelper;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = (gc.survivorAlignment.AlignmentHelper) r0;

        $l2 = virtualinvoke $r1.<gc.survivorAlignment.AlignmentHelper: long getObjectSizeInThisSpace(long)>(l1);

        $l3 = l0 / $l2;

        $i4 = (int) $l3;

        return $i4;
    }

    public long getExpectedMemoryUsage(long, int)
    {
        gc.survivorAlignment.AlignmentHelper $r1, $r2;
        AlignmentHelper r0;
        long l0, $l1, $l3, $l4, $l5, $l6;
        int i2;

        r0 := @this: AlignmentHelper;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        $r1 = (gc.survivorAlignment.AlignmentHelper) r0;

        $l1 = virtualinvoke $r1.<gc.survivorAlignment.AlignmentHelper: long getObjectSizeInThisSpace(long)>(l0);

        $l3 = (long) i2;

        $l5 = $l1 * $l3;

        $r2 = (gc.survivorAlignment.AlignmentHelper) r0;

        $l4 = $r2.<gc.survivorAlignment.AlignmentHelper: long memoryUsageMeasurementPrecision>;

        $l6 = staticinvoke <gc.survivorAlignment.AlignmentHelper: long alignUp(long,long)>($l5, $l4);

        return $l6;
    }

    public long getActualMemoryUsage()
    {
        gc.survivorAlignment.AlignmentHelper $r3;
        java.lang.management.MemoryPoolMXBean $r1;
        AlignmentHelper r0;
        long $l0;
        java.lang.management.MemoryUsage $r2;

        r0 := @this: AlignmentHelper;

        $r3 = (gc.survivorAlignment.AlignmentHelper) r0;

        $r1 = $r3.<gc.survivorAlignment.AlignmentHelper: java.lang.management.MemoryPoolMXBean poolMXBean>;

        $r2 = interfaceinvoke $r1.<java.lang.management.MemoryPoolMXBean: java.lang.management.MemoryUsage getUsage()>();

        $l0 = virtualinvoke $r2.<java.lang.management.MemoryUsage: long getUsed()>();

        return $l0;
    }

    public long getAllowedMemoryUsageDeviation(long)
    {
        gc.survivorAlignment.AlignmentHelper $r1;
        long l0, l1, $l2, $l3;
        AlignmentHelper r0;
        float $f0, $f1;

        r0 := @this: AlignmentHelper;

        l0 := @parameter0: long;

        $f0 = (float) l0;

        $f1 = $f0 * 0.05F;

        l1 = (long) $f1;

        $r1 = (gc.survivorAlignment.AlignmentHelper) r0;

        $l2 = $r1.<gc.survivorAlignment.AlignmentHelper: long memoryUsageMeasurementPrecision>;

        $l3 = staticinvoke <gc.survivorAlignment.AlignmentHelper: long alignUp(long,long)>(l1, $l2);

        return $l3;
    }

    public long getObjectSizeInThisSpace(long)
    {
        long $l0, $l1, $l2, $l3, l4, $l5, $l7, $l9, $l10, l11, l12, l13;
        byte $b6, $b8;
        int $i14, $i15;
        gc.survivorAlignment.AlignmentHelper $r1, $r2, $r3;
        AlignmentHelper r0;

        r0 := @this: AlignmentHelper;

        l11 := @parameter0: long;

        $r1 = (gc.survivorAlignment.AlignmentHelper) r0;

        $l0 = $r1.<gc.survivorAlignment.AlignmentHelper: long minObjectSizeInThisSpace>;

        $l1 = staticinvoke <java.lang.Math: long max(long,long)>(l11, $l0);

        $r2 = (gc.survivorAlignment.AlignmentHelper) r0;

        $l2 = $r2.<gc.survivorAlignment.AlignmentHelper: long objectAlignmentInThisRegion>;

        $l3 = staticinvoke <gc.survivorAlignment.AlignmentHelper: long alignUp(long,long)>($l1, $l2);

        l12 = $l3;

        l4 = $l3 - $l1;

        $l5 = <gc.survivorAlignment.AlignmentHelper: long OBJECT_ALIGNMENT_IN_BYTES>;

        $b6 = l4 cmp $l5;

        $i14 = (int) $b6;

        if $i14 < 0 goto label1;

        $l7 = <gc.survivorAlignment.AlignmentHelper: long MIN_OBJECT_SIZE>;

        $b8 = l4 cmp $l7;

        $i15 = (int) $b8;

        if $i15 >= 0 goto label1;

        $l9 = <gc.survivorAlignment.AlignmentHelper: long MIN_OBJECT_SIZE>;

        l13 = $l3 + $l9;

        $r3 = (gc.survivorAlignment.AlignmentHelper) r0;

        $l10 = $r3.<gc.survivorAlignment.AlignmentHelper: long objectAlignmentInThisRegion>;

        l12 = staticinvoke <gc.survivorAlignment.AlignmentHelper: long alignUp(long,long)>(l13, $l10);

     label1:
        return l12;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1, $r6, $r9, $r12;
        long $l0, $l1, $l2;
        java.lang.management.MemoryPoolMXBean $r3;
        java.lang.Long $r7, $r10, $r13;
        java.lang.String $r4, $r5, $r8, $r11, $r14, $r15;
        gc.survivorAlignment.AlignmentHelper $r17, $r18, $r19, $r20;
        AlignmentHelper r2;
        java.lang.StringBuilder $r16;

        r2 := @this: AlignmentHelper;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r1 = newarray (java.lang.Object)[1];

        $r17 = (gc.survivorAlignment.AlignmentHelper) r2;

        $r3 = $r17.<gc.survivorAlignment.AlignmentHelper: java.lang.management.MemoryPoolMXBean poolMXBean>;

        $r4 = interfaceinvoke $r3.<java.lang.management.MemoryPoolMXBean: java.lang.String getName()>();

        $r1[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("AlignmentHelper for memory pool \'%s\':%n", $r1);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = newarray (java.lang.Object)[1];

        $r18 = (gc.survivorAlignment.AlignmentHelper) r2;

        $l0 = $r18.<gc.survivorAlignment.AlignmentHelper: long memoryUsageMeasurementPrecision>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Memory usage measurement precision: %d%n", $r6);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = newarray (java.lang.Object)[1];

        $r19 = (gc.survivorAlignment.AlignmentHelper) r2;

        $l1 = $r19.<gc.survivorAlignment.AlignmentHelper: long minObjectSizeInThisSpace>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Min object size in this space: %d%n", $r9);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = newarray (java.lang.Object)[1];

        $r20 = (gc.survivorAlignment.AlignmentHelper) r2;

        $l2 = $r20.<gc.survivorAlignment.AlignmentHelper: long objectAlignmentInThisRegion>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r12[0] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Object alignment in this space: %d%n", $r12);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    private static java.lang.AssertionError lambda$0()
    {
        java.lang.AssertionError $r0;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>("Unable to get SurvivorAlignmentInBytes value");

        return $r0;
    }
}
